{"ast":null,"code":"import React from'react';import CleanPlaylist from'./CleanPlaylist';import'./Playlists.css';import SpotifyWebApi from'spotify-web-api-js';const spotifyApi=new SpotifyWebApi();class Playlists extends React.Component{constructor(props){super(props);this.playlistIsSelected=event=>{const currentPlaylistId=event.target.getAttribute(\"id\");const playlistOwnerId=event.target.getAttribute(\"owner\");const playlistName=event.target.getAttribute(\"name\");this.setState({playlistSelected:true,currentSelected:currentPlaylistId,ownerId:playlistOwnerId,playlistName:playlistName});};this.handleSearchChange=event=>{const searchQuery=event.target.value.toLowerCase();const filteredPlaylists=this.state.playlistList.filter(playlist=>playlist.name.toLowerCase().includes(searchQuery));this.setState({searchQuery,filteredPlaylists});};this.state={ownerId:'',playlistList:[],filteredPlaylists:[],playlistSelected:false,currentSelected:'',playlistName:'',noPlaylists:false,searchQuery:''// Add search query state\n};}async getPlaylistData(){let playlistItems=[];const limit=50;try{const initialResponse=await spotifyApi.getUserPlaylists({limit,offset:0});if(!initialResponse||!initialResponse.items){this.setState({noPlaylists:true});return;}const totalPlaylists=initialResponse.total;const totalRequests=Math.ceil(totalPlaylists/limit);const requests=Array.from({length:totalRequests},(_,i)=>spotifyApi.getUserPlaylists({limit,offset:i*limit}));const responses=await Promise.all(requests);responses.forEach(response=>{response.items.forEach(item=>{if(!item.images||item.images.length===0){item.images=[{url:\"https://static.vecteezy.com/system/resources/previews/011/934/413/original/silver-music-note-icon-free-png.png\"}];}// Add to playlistItems if it doesn't already exist\nif(!playlistItems.some(existing=>existing.id===item.id)){playlistItems.push({ownerId:item.owner.id,id:item.id,name:item.name,image:item.images[0].url});}});});this.setState({playlistList:playlistItems,filteredPlaylists:playlistItems,noPlaylists:playlistItems.length===0});}catch(error){console.error(\"Error fetching playlists:\",error);this.setState({noPlaylists:true});}}componentDidMount(){this.getPlaylistData();}backButton(){this.setState({playlistSelected:false});}render(){const{user}=this.props;const{playlistSelected,filteredPlaylists,noPlaylists,searchQuery}=this.state;const showPlaylist=filteredPlaylists.map(playlist=>/*#__PURE__*/React.createElement(\"div\",{key:playlist.id,className:\"col-sm-6 col-md-4 col-lg-3 col-12 card\"},/*#__PURE__*/React.createElement(\"img\",{src:playlist.image,id:playlist.id,name:playlist.name,owner:playlist.ownerId,onClick:this.playlistIsSelected,className:\"card-img card-img-top\",alt:\"playlist cover\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"p\",{className:\"card-text font-weight-bold\"},playlist.name))));return/*#__PURE__*/React.createElement(\"div\",{className:\"Playlist\"},playlistSelected?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-success float-left mt-n1\",onClick:this.backButton.bind(this)},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-arrow-circle-left\",\"aria-hidden\":\"true\"}),\" Clean Another\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(CleanPlaylist,{name:this.state.playlistName,id:this.state.ownerId,data:this.state.currentSelected,user:user}))):/*#__PURE__*/React.createElement(\"div\",{className:\"user-playlists overflow-hidden\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"font-weight-bold header\"},\"Playlists\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"h5 text-weight-bold text-success sub-header\"},\"Select a Playlist to Clean\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted sub-sub-header\"},\"Don't worry! We will not alter your original playlist.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted sub-sub-header\"},\"Can't find it? Make sure you either own or follow the playlist\"),/*#__PURE__*/React.createElement(\"hr\",{className:\"divider mb-5\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control search-input mb-5\",placeholder:\"Search your playlists...\",value:searchQuery,onChange:this.handleSearchChange}),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},noPlaylists?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center col-12\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Oh no! You do not have any existing playlists to clean.\"),/*#__PURE__*/React.createElement(\"h4\",null,\"Open Spotify to create a new playlist and revisit Cleanify.\"),/*#__PURE__*/React.createElement(\"a\",{href:\"https://open.spotify.com\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"btn btn-success\"},\"Open Spotify\")):showPlaylist)));}}export default Playlists;","map":{"version":3,"names":["React","CleanPlaylist","SpotifyWebApi","spotifyApi","Playlists","Component","constructor","props","playlistIsSelected","event","currentPlaylistId","target","getAttribute","playlistOwnerId","playlistName","setState","playlistSelected","currentSelected","ownerId","handleSearchChange","searchQuery","value","toLowerCase","filteredPlaylists","state","playlistList","filter","playlist","name","includes","noPlaylists","getPlaylistData","playlistItems","limit","initialResponse","getUserPlaylists","offset","items","totalPlaylists","total","totalRequests","Math","ceil","requests","Array","from","length","_","i","responses","Promise","all","forEach","response","item","images","url","some","existing","id","push","owner","image","error","console","componentDidMount","backButton","render","user","showPlaylist","map","createElement","key","className","src","onClick","alt","type","bind","data","placeholder","onChange","href","rel"],"sources":["/Users/brianaking/cleanify/src/components/Playlists.js"],"sourcesContent":["import React from 'react';\nimport CleanPlaylist from './CleanPlaylist';\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ownerId: '',\n      playlistList: [],\n      filteredPlaylists: [],\n      playlistSelected: false,\n      currentSelected: '',\n      playlistName: '',\n      noPlaylists: false,\n      searchQuery: '' // Add search query state\n    };\n  }\n\n  async getPlaylistData() {\n    let playlistItems = [];\n    const limit = 50;\n  \n    try {\n      const initialResponse = await spotifyApi.getUserPlaylists({ limit, offset: 0 });\n  \n      if (!initialResponse || !initialResponse.items) {\n        this.setState({ noPlaylists: true });\n        return;\n      }\n  \n      const totalPlaylists = initialResponse.total;\n      const totalRequests = Math.ceil(totalPlaylists / limit);\n  \n      const requests = Array.from({ length: totalRequests }, (_, i) =>\n        spotifyApi.getUserPlaylists({ limit, offset: i * limit })\n      );\n  \n      const responses = await Promise.all(requests);\n  \n      responses.forEach(response => {\n        response.items.forEach(item => {\n          if (!item.images || item.images.length === 0) {\n            item.images = [{ url: \"https://static.vecteezy.com/system/resources/previews/011/934/413/original/silver-music-note-icon-free-png.png\" }];\n          }\n  \n          // Add to playlistItems if it doesn't already exist\n          if (!playlistItems.some(existing => existing.id === item.id)) {\n            playlistItems.push({\n              ownerId: item.owner.id,\n              id: item.id,\n              name: item.name,\n              image: item.images[0].url\n            });\n          }\n        });\n      });\n  \n      this.setState({\n        playlistList: playlistItems,\n        filteredPlaylists: playlistItems,\n        noPlaylists: playlistItems.length === 0\n      });\n    } catch (error) {\n      console.error(\"Error fetching playlists:\", error);\n      this.setState({ noPlaylists: true });\n    }\n  }\n  \n  \n  \n\n  componentDidMount() {\n    this.getPlaylistData();\n  }\n\n  playlistIsSelected = (event) => {\n    const currentPlaylistId = event.target.getAttribute(\"id\");\n    const playlistOwnerId = event.target.getAttribute(\"owner\");\n    const playlistName = event.target.getAttribute(\"name\");\n    this.setState({\n      playlistSelected: true,\n      currentSelected: currentPlaylistId,\n      ownerId: playlistOwnerId,\n      playlistName: playlistName\n    });\n  }\n\n  backButton() {\n    this.setState({ playlistSelected: false });\n  }\n\n  handleSearchChange = (event) => {\n    const searchQuery = event.target.value.toLowerCase();\n    const filteredPlaylists = this.state.playlistList.filter(playlist =>\n      playlist.name.toLowerCase().includes(searchQuery)\n    );\n    this.setState({ searchQuery, filteredPlaylists });\n  }\n\n  render() {\n    const { user } = this.props;\n    const { playlistSelected, filteredPlaylists, noPlaylists, searchQuery } = this.state;\n\n    const showPlaylist = filteredPlaylists.map((playlist) => (\n      <div key={playlist.id} className=\"col-sm-6 col-md-4 col-lg-3 col-12 card\">\n        <img\n          src={playlist.image}\n          id={playlist.id}\n          name={playlist.name}\n          owner={playlist.ownerId}\n          onClick={this.playlistIsSelected}\n          className=\"card-img card-img-top\"\n          alt=\"playlist cover\"\n        />\n        <div className=\"card-body\">\n          <p className=\"card-text font-weight-bold\">{playlist.name}</p>\n        </div>\n      </div>\n    ));\n\n    return (\n      <div className=\"Playlist\">\n        {playlistSelected ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-success float-left mt-n1\"\n                  onClick={this.backButton.bind(this)}\n                >\n                  <i className=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></i> Clean Another\n                </button>\n              </div>\n            </div>\n            <div className=\"row\">\n              <CleanPlaylist\n                name={this.state.playlistName}\n                id={this.state.ownerId}\n                data={this.state.currentSelected}\n                user={user}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"user-playlists overflow-hidden\">\n            <h3 className=\"font-weight-bold header\">Playlists</h3>\n            <h3 className=\"h5 text-weight-bold text-success sub-header\">Select a Playlist to Clean</h3>\n            <p className=\"text-muted sub-sub-header\">Don't worry! We will not alter your original playlist.</p>\n            <p className=\"text-muted sub-sub-header\">Can't find it? Make sure you either own or follow the playlist</p>\n            <hr className=\"divider mb-5\" />\n            <input\n              type=\"text\"\n              className=\"form-control search-input mb-5\"\n              placeholder=\"Search your playlists...\"\n              value={searchQuery}\n              onChange={this.handleSearchChange}\n            />\n            <div className=\"row\">\n              {noPlaylists ? (\n                <div className=\"text-center col-12\">\n                  <h3>Oh no! You do not have any existing playlists to clean.</h3>\n                  <h4>Open Spotify to create a new playlist and revisit Cleanify.</h4>\n                  <a href=\"https://open.spotify.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-success\">Open Spotify</a>\n                </div>\n              ) : (\n                showPlaylist\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Playlists;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}