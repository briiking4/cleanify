{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/Spotify API/my-app/src/components/Playlists.js\";\nimport React from 'react';\nimport CleanPlaylist from './CleanPlaylist';\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.playlistIsSelected = event => {\n      var currentPlaylistId = event.target.getAttribute(\"id\");\n      var playlistOwnerId = event.target.getAttribute(\"owner\");\n      var playlistName = event.target.getAttribute(\"name\");\n      console.log(currentPlaylistId);\n      console.log(playlistOwnerId);\n      console.log(playlistName);\n      this.setState({\n        playlistSelected: true,\n        currentSelected: currentPlaylistId,\n        ownerId: playlistOwnerId,\n        playlistName: playlistName\n      });\n    };\n\n    this.state = {\n      ownerId: '',\n      playlistList: [],\n      playlistSelected: false,\n      currentSelected: '',\n      playlistName: ''\n    };\n    this.playlistIsSelected = this.playlistIsSelected.bind(this);\n  }\n\n  getPlaylistData() {\n    var playlistItems = [];\n    spotifyApi.getUserPlaylists({\n      limit: 50\n    }).then((response, onRejected) => {\n      console.log(response);\n      response.items.map(item => {\n        if (item.images.length === 0) {\n          item.images.push({\n            url: \"https://i.ya-webdesign.com/images/notes-grey-icons-png-2.png\"\n          });\n        }\n\n        playlistItems.push({\n          ownerId: item.owner.id,\n          id: item.id,\n          name: item.name,\n          image: item.images[0].url\n        });\n        return playlistItems;\n      });\n      this.setState({\n        playlistList: playlistItems\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPlaylistData();\n  }\n\n  render() {\n    const userId = this.props.user;\n    const playlistId = this.state.currentSelected;\n    const ownerId = this.state.ownerId;\n    const selected = this.playlistIsSelected;\n    const showPlaylist = this.state.playlistList.map(function (playlist) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: playlist.id,\n        className: \"col-md-4 col-lg-3 col-6 card\",\n        name: playlist.name,\n        id: playlist.id,\n        owner: playlist.ownerId,\n        onClick: selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: playlist.image,\n        id: playlist.id,\n        className: \"card-img card-img-top\",\n        alt: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-button\",\n        name: playlist.name,\n        id: playlist.id,\n        owner: playlist.ownerId,\n        onClick: selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-play fa-3x text-white\",\n        name: playlist.name,\n        id: playlist.id,\n        owner: playlist.ownerId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-text font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }\n      }, playlist.name)));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.state.playlistSelected ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CleanPlaylist, {\n      name: this.state.playlistName,\n      id: ownerId,\n      data: playlistId,\n      user: userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-playlists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Playlists\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"h5 text-weight-bold text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \" Select a Playlist to Clean\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \" text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \" Don't worry! We will not alter your original playlist.\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"divider mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, showPlaylist)));\n  }\n\n}\n\nexport default Playlists;","map":{"version":3,"sources":["/Users/brianaking/Desktop/Spotify API/my-app/src/components/Playlists.js"],"names":["React","CleanPlaylist","SpotifyWebApi","spotifyApi","Playlists","Component","constructor","props","playlistIsSelected","event","currentPlaylistId","target","getAttribute","playlistOwnerId","playlistName","console","log","setState","playlistSelected","currentSelected","ownerId","state","playlistList","bind","getPlaylistData","playlistItems","getUserPlaylists","limit","then","response","onRejected","items","map","item","images","length","push","url","owner","id","name","image","componentDidMount","render","userId","user","playlistId","selected","showPlaylist","playlist"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CleanPlaylist from './CleanPlaylist'\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      ownerId: '',\n      playlistList: [],\n      playlistSelected: false,\n      currentSelected: '',\n      playlistName: ''\n    };\n    this.playlistIsSelected =   this.playlistIsSelected.bind(this)\n  }\n\n  getPlaylistData(){\n    var playlistItems= [];\n\n      spotifyApi.getUserPlaylists({limit:50})\n         .then((response, onRejected) => {\n           console.log(response)\n             response.items.map((item) => {\n               if (item.images.length === 0){\n                 item.images.push({url: \"https://i.ya-webdesign.com/images/notes-grey-icons-png-2.png\"})\n               }\n               playlistItems.push({ownerId: item.owner.id, id: item.id, name:item.name, image: item.images[0].url})\n               return playlistItems\n             })\n            this.setState({\n              playlistList: playlistItems\n            })\n         });\n\n   }\n\n   componentDidMount(){\n     this.getPlaylistData()\n   }\n\n   playlistIsSelected = (event) => {\n\n     var currentPlaylistId = event.target.getAttribute(\"id\")\n     var playlistOwnerId = event.target.getAttribute(\"owner\")\n     var playlistName = event.target.getAttribute(\"name\")\n     console.log(currentPlaylistId)\n     console.log(playlistOwnerId)\n     console.log(playlistName)\n\n     this.setState({\n       playlistSelected: true,\n       currentSelected: currentPlaylistId,\n       ownerId: playlistOwnerId,\n       playlistName: playlistName\n     });\n\n   }\n\n\n  render(){\n    const userId = this.props.user\n    const playlistId = this.state.currentSelected\n    const ownerId = this.state.ownerId\n\n    const selected = this.playlistIsSelected\n\n    const showPlaylist =\n      this.state.playlistList.map(function(playlist){\n        return (\n          <div key={playlist.id} className=\"col-md-4 col-lg-3 col-6 card\" name= {playlist.name} id= {playlist.id} owner = {playlist.ownerId} onClick= {selected}>\n              <img src={playlist.image} id= {playlist.id} className=\"card-img card-img-top\" alt=\"card\"/>\n              <div className= \"card-button\" name= {playlist.name} id= {playlist.id} owner = {playlist.ownerId} onClick= {selected}>\n                <i className=\"fas fa-play fa-3x text-white\" name= {playlist.name} id= {playlist.id} owner = {playlist.ownerId}></i>\n              </div>\n             <div className=\"card-body\">\n               <p className=\"card-text font-weight-bold\">{playlist.name}</p>\n             </div>\n          </div>\n           )\n      });\n\n\n    return (\n      <div className=\"Playlist\">\n\n      {\n        this.state.playlistSelected ?\n        <div>\n          <CleanPlaylist name= {this.state.playlistName} id= {ownerId} data= {playlistId} user= {userId}></CleanPlaylist>\n        </div>\n        : <div className=\"user-playlists\">\n            <h3 className=\"font-weight-bold\">Playlists</h3>\n            <h3 className=\"h5 text-weight-bold text-success\"> Select a Playlist to Clean</h3>\n            <p className=\" text-muted\"> Don't worry! We will not alter your original playlist.</p>\n            <hr className=\"divider mb-5\"/>\n            <div className=\"row\">\n              {showPlaylist}\n              </div>\n          </div>\n      }\n      </div>\n\n    );\n  }\n}\n\n\nexport default Playlists\n"]},"metadata":{},"sourceType":"module"}