{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/cleanify/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport Playlists from './components/Playlists';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      userId: '',\n      loggedIn: params.access_token ? true : false,\n      profPic: '',\n      name: ''\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getUserProfile() {\n    spotifyApi.getMe().then(response => {\n      if (response.images.length === 0) {\n        this.setState({\n          userId: response.id,\n          profPic: logo,\n          name: response.display_name\n        });\n      } else {\n        this.setState({\n          userId: response.id,\n          profPic: response.images[0].url,\n          name: response.display_name\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getUserProfile();\n    }\n  }\n\n  render() {\n    const userId = this.state.userId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, this.state.loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.profPic,\n      className: \"profPic rounded-circle\",\n      alt: \"profile pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"profName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, this.state.name)), /*#__PURE__*/React.createElement(Playlists, {\n      user: userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"img-fluid\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \" Cleanify \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \" Login With Spotify \"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianaking/Desktop/cleanify/client/src/App.js"],"names":["React","Component","logo","Playlists","SpotifyWebApi","spotifyApi","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","userId","loggedIn","profPic","name","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getUserProfile","getMe","then","response","images","length","setState","id","display_name","url","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport Playlists from './components/Playlists'\n\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n\nconstructor (){\n  super();\n  const params = this.getHashParams();\n  const token = params.access_token;\n\n  if (token) {\n     spotifyApi.setAccessToken(token);\n  }\n\n  this.state ={\n    userId: '',\n    loggedIn: params.access_token ? true : false,\n    profPic: '',\n    name: ''\n  }\n}\n getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n\n  getUserProfile(){\n    spotifyApi.getMe()\n      .then((response) => {\n        if ((response.images.length === 0)){\n          this.setState ({\n            userId: response.id,\n            profPic: logo,\n            name: response.display_name\n          })\n        }else{\n          this.setState ({\n            userId: response.id,\n            profPic: response.images[0].url,\n            name: response.display_name\n          })\n        }\n      })\n  }\n\n  componentDidMount(){\n    if(this.state.loggedIn){\n      this.getUserProfile()\n    }\n  }\n\n\n\n  render(){\n    const userId = this.state.userId\n\n    return (\n\n      <div className=\"App\">\n\n        {\n          this.state.loggedIn\n          ? <div>\n              <div className=\"row profile\">\n                <img src= {this.state.profPic} className=\"profPic rounded-circle\" alt=\"profile pic\"/>\n                <h1 className=\"profName\">{this.state.name}</h1>\n              </div>\n              <Playlists user= {userId}></Playlists>\n            </div>\n          : <div className=\"container\">\n                <img src={logo} className=\"img-fluid\" alt=\"logo\"/>\n                  <h1> Cleanify </h1>\n                  <a href='http://localhost:8888'>\n                    <button type=\"button\" className=\"btn btn-success btn-lg\"> Login With Spotify </button>\n                  </a>\n            </div>\n        }\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}