{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/cleanify/client/src/components/Playlists.js\";\nimport React from 'react';\nimport CleanPlaylist from './CleanPlaylist';\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.playlistIsSelected = event => {\n      var currentPlaylistId = event.target.getAttribute(\"id\");\n      var playlistOwnerId = event.target.getAttribute(\"owner\");\n      var playlistName = event.target.getAttribute(\"name\");\n      this.setState({\n        playlistSelected: true,\n        currentSelected: currentPlaylistId,\n        ownerId: playlistOwnerId,\n        playlistName: playlistName\n      });\n    };\n\n    this.state = {\n      ownerId: '',\n      playlistList: [],\n      playlistSelected: false,\n      currentSelected: '',\n      playlistName: ''\n    };\n  }\n\n  getPlaylistData() {\n    var playlistItems = [];\n    spotifyApi.getUserPlaylists({\n      limit: 50\n    }).then((response, onRejected) => {\n      response.items.map(item => {\n        if (item.images.length === 0) {\n          item.images.push({\n            url: \"https://i.ya-webdesign.com/images/notes-grey-icons-png-2.png\"\n          });\n        }\n\n        playlistItems.push({\n          ownerId: item.owner.id,\n          id: item.id,\n          name: item.name,\n          image: item.images[0].url\n        });\n        return playlistItems;\n      });\n      this.setState({\n        playlistList: playlistItems\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPlaylistData();\n  }\n\n  backButton() {\n    this.setState({\n      playlistSelected: false\n    });\n  }\n\n  render() {\n    const userId = this.props.user;\n    const playlistId = this.state.currentSelected;\n    const ownerId = this.state.ownerId;\n    const selected = this.playlistIsSelected;\n    const showPlaylist = this.state.playlistList.map(function (playlist) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: playlist.id,\n        className: \"col-sm-6 col-md-4 col-lg-3 col-12 card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: playlist.image,\n        id: playlist.id,\n        name: playlist.name,\n        owner: playlist.ownerId,\n        onClick: selected,\n        className: \"card-img card-img-top\",\n        alt: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-text font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }\n      }, playlist.name)));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, this.state.playlistSelected ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success float-left mt-n1\",\n      onClick: this.backButton.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-arrow-circle-left\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 117\n      }\n    }), \" Clean Another\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CleanPlaylist, {\n      name: this.state.playlistName,\n      id: ownerId,\n      data: playlistId,\n      user: userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-playlists overflow-hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"font-weight-bold header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Playlists\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"h5 text-weight-bold text-success sub-header \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \" Select a Playlist to Clean\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \" text-muted sub-sub-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \" Don't worry! We will not alter your original playlist.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \" text-muted sub-sub-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \" Can't find it? Make sure you either own or follow the playlist. If so, open Spotify and move it to the top of your list!\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"divider mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, this.state.playlistList.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, \"You do not have any existing playlists to clean. Open Spotify to create a new playlist.\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://open.spotify.com\",\n      class: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"Open Spotify\")) : showPlaylist)));\n  }\n\n}\n\nexport default Playlists;","map":{"version":3,"sources":["/Users/brianaking/Desktop/cleanify/client/src/components/Playlists.js"],"names":["React","CleanPlaylist","SpotifyWebApi","spotifyApi","Playlists","Component","constructor","props","playlistIsSelected","event","currentPlaylistId","target","getAttribute","playlistOwnerId","playlistName","setState","playlistSelected","currentSelected","ownerId","state","playlistList","getPlaylistData","playlistItems","getUserPlaylists","limit","then","response","onRejected","items","map","item","images","length","push","url","owner","id","name","image","componentDidMount","backButton","render","userId","user","playlistId","selected","showPlaylist","playlist","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CleanPlaylist from './CleanPlaylist'\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      ownerId: '',\n      playlistList: [],\n      playlistSelected: false,\n      currentSelected: '',\n      playlistName: '',\n    };\n  }\n\n  getPlaylistData(){\n    var playlistItems= [];\n\n      spotifyApi.getUserPlaylists({limit:50})\n         .then((response, onRejected) => {\n             response.items.map((item) => {\n               if (item.images.length === 0){\n                 item.images.push({url: \"https://i.ya-webdesign.com/images/notes-grey-icons-png-2.png\"})\n               }\n               playlistItems.push({ownerId: item.owner.id, id: item.id, name:item.name, image: item.images[0].url})\n               return playlistItems\n             })\n            this.setState({\n              playlistList: playlistItems\n            })\n         });\n\n   }\n\n   componentDidMount(){\n     this.getPlaylistData()\n   }\n\n   playlistIsSelected = (event) => {\n\n     var currentPlaylistId = event.target.getAttribute(\"id\")\n     var playlistOwnerId = event.target.getAttribute(\"owner\")\n     var playlistName = event.target.getAttribute(\"name\")\n     this.setState({\n       playlistSelected: true,\n       currentSelected: currentPlaylistId,\n       ownerId: playlistOwnerId,\n       playlistName: playlistName\n     });\n   }\n\n   backButton(){\n     this.setState({\n       playlistSelected:false\n     })\n   }\n\n  render(){\n    const userId = this.props.user\n    const playlistId = this.state.currentSelected\n    const ownerId = this.state.ownerId\n\n    const selected = this.playlistIsSelected\n\n    const showPlaylist =\n      this.state.playlistList.map(function(playlist){\n        return (\n          <div key={playlist.id} className=\"col-sm-6 col-md-4 col-lg-3 col-12 card\">\n             <img src={playlist.image} id= {playlist.id} name= {playlist.name} owner = {playlist.ownerId} onClick={selected} className=\"card-img card-img-top\" alt=\"card\"/>\n             <div className=\"card-body\">\n               <p className=\"card-text font-weight-bold\">{playlist.name}</p>\n             </div>\n          </div>\n           )\n      });\n\n\n\n    return (\n      <div className=\"Playlist\">\n\n      {\n        this.state.playlistSelected ?\n        <div>\n          <div className=\"row\">\n          <div className=\"col\">\n            <button type=\"button\" className=\"btn btn-success float-left mt-n1\" onClick={this.backButton.bind(this)}><i className =\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></i> Clean Another</button>\n          </div>\n          </div>\n          <div className=\"row\">\n            <CleanPlaylist name= {this.state.playlistName} id= {ownerId} data= {playlistId} user= {userId}></CleanPlaylist>\n          </div>\n        </div>\n        : <div className=\"user-playlists overflow-hidden\">\n            <h3 className=\"font-weight-bold header\">Playlists</h3>\n            <h3 className=\"h5 text-weight-bold text-success sub-header \"> Select a Playlist to Clean</h3>\n            <p className=\" text-muted sub-sub-header\"> Don't worry! We will not alter your original playlist.</p>\n            <p className=\" text-muted sub-sub-header\"> Can't find it? Make sure you either own or follow the playlist. If so, open Spotify and move it to the top of your list!</p>\n            <hr className=\"divider mb-5\"/>\n              <div className=\"row\">\n              {this.state.playlistList.length === 0 ?\n                <div class=\"text-center col-12\">\n                  <h3>You do not have any existing playlists to clean. Open Spotify to create a new playlist.</h3>\n                  <a href=\"https://open.spotify.com\" class=\"btn btn-success\">Open Spotify</a>\n                </div>\n                :\n                showPlaylist\n              }\n              </div>\n          </div>\n      }\n      </div>\n\n    );\n  }\n}\n\n\nexport default Playlists\n"]},"metadata":{},"sourceType":"module"}