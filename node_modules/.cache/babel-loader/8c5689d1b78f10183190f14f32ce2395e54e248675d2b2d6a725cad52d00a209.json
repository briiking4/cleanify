{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/cleanify/src/App.js\";\nimport React, { Component } from 'react';\nimport profPic from './profPic.png';\nimport logo from './logo.png';\nimport Zoom from 'react-reveal/Zoom';\nimport Fade from 'react-reveal/Fade';\nimport './App.css';\nimport Playlists from './components/Playlists';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport ReactGA from 'react-ga';\nconst spotifyApi = new SpotifyWebApi();\nclass App extends Component {\n  constructor() {\n    super();\n    // Function to get refresh token\n    this.getRefreshToken = async () => {\n      const refreshToken = localStorage.getItem('refresh_token');\n      const url = 'https://accounts.spotify.com/api/token';\n\n      // Log to check the stored refresh token\n      console.log('Refresh Token:', refreshToken);\n\n      // Prepare the payload\n      const payload = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          grant_type: 'refresh_token',\n          refresh_token: refreshToken,\n          client_id: process.env.REACT_APP_SPOTIFY_CLIENT_ID\n        })\n      };\n      try {\n        // Send the request\n        const body = await fetch(url, payload);\n        const response = await body.json();\n\n        // Log the response to debug\n        console.log('Refresh Token Response:', response);\n\n        // Check if the response contains the access token\n        if (response.access_token) {\n          localStorage.setItem('access_token', response.access_token); // Store the new access token\n          spotifyApi.setAccessToken(response.access_token); // Set the new access token for API\n        }\n\n        // Check if there is a new refresh token and store it\n        if (response.refresh_token) {\n          localStorage.setItem('refresh_token', response.refresh_token); // Store the new refresh token\n        }\n      } catch (error) {\n        console.error('Error refreshing token:', error);\n      }\n    };\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    // Set token if it exists in the URL\n    if (token) {\n      spotifyApi.setAccessToken(token);\n      localStorage.setItem('access_token', token); // Store the access token\n    }\n    ReactGA.initialize('UA-172518785-1');\n    ReactGA.pageview(window.location.pathname);\n    this.state = {\n      userId: '',\n      loggedIn: token ? true : false,\n      profPic: '',\n      name: ''\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  getHashParams() {\n    let hashParams = {};\n    let e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  // Function to get user profile from Spotify\n  getUserProfile() {\n    spotifyApi.getMe().then(response => {\n      if (response.images.length === 0) {\n        this.setState({\n          userId: response.id,\n          profPic: profPic,\n          name: response.display_name\n        });\n      } else {\n        this.setState({\n          userId: response.id,\n          profPic: response.images[0].url,\n          name: response.display_name\n        });\n      }\n    });\n  }\n  // Handle component mounting\n  async componentDidMount() {\n    if (this.state.loggedIn) {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken) {\n        const tokenExpiration = localStorage.getItem('token_expiration');\n        if (!tokenExpiration || Date.now() > tokenExpiration) {\n          // If token has expired, refresh it\n          await this.getRefreshToken();\n        }\n        this.getUserProfile();\n      } else {\n        // If no access token, try to refresh\n        await this.getRefreshToken();\n        this.getUserProfile();\n      }\n    }\n  }\n\n  // Generate random state string for Spotify login\n  generateRandomString(length) {\n    let text = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  login() {\n    const stateKey = 'spotify_auth_state';\n    const redirect_uri = 'http://localhost:3000/'; // redirect URI\n\n    const state = this.generateRandomString(16);\n    localStorage.setItem(stateKey, state);\n    const scope = 'user-read-private user-read-email playlist-read-private playlist-modify-public playlist-modify-private';\n    let url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=token';\n    url += '&client_id=' + encodeURIComponent(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\n    url += '&scope=' + encodeURIComponent(scope);\n    url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n    url += '&state=' + encodeURIComponent(state);\n    window.location = url;\n  }\n  logout() {\n    this.setState({\n      loggedIn: false\n    });\n    window.location.href = '';\n  }\n  render() {\n    const userId = this.state.userId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, this.state.loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 col-sm-4 col-lg-1 col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.profPic,\n      className: \"profPic rounded-circle img-fluid\",\n      alt: \"profile pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8 col-sm-8 col-lg-11 col-md-9 text-left ml-n3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger btn-sm mx-0 logout float-right\",\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"Log Out\"), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"profName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, this.state.name))), /*#__PURE__*/React.createElement(Playlists, {\n      user: userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login\",\n      className: \"pt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Fade, {\n      top: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"logo img-fluid text-center\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"logo-title font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, \"Cleanify\"))), /*#__PURE__*/React.createElement(Zoom, {\n      delay: 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"login-button\",\n      onClick: this.login,\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Log in with Spotify\")))));\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","profPic","logo","Zoom","Fade","Playlists","SpotifyWebApi","ReactGA","spotifyApi","App","constructor","getRefreshToken","refreshToken","localStorage","getItem","url","console","log","payload","method","headers","body","URLSearchParams","grant_type","refresh_token","client_id","process","env","REACT_APP_SPOTIFY_CLIENT_ID","fetch","response","json","access_token","setItem","setAccessToken","error","params","getHashParams","token","initialize","pageview","window","location","pathname","state","userId","loggedIn","name","login","bind","logout","hashParams","e","r","q","hash","substring","exec","decodeURIComponent","getUserProfile","getMe","then","images","length","setState","id","display_name","componentDidMount","accessToken","tokenExpiration","Date","now","generateRandomString","text","possible","i","charAt","Math","floor","random","stateKey","redirect_uri","scope","encodeURIComponent","href","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onClick","user","top","delay"],"sources":["/Users/brianaking/cleanify/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport profPic from './profPic.png';\nimport logo from './logo.png';\nimport Zoom from 'react-reveal/Zoom';\nimport Fade from 'react-reveal/Fade';\n\nimport './App.css';\nimport Playlists from './components/Playlists';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport ReactGA from 'react-ga';\n\n\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    // Set token if it exists in the URL\n    if (token) {\n      spotifyApi.setAccessToken(token);\n      localStorage.setItem('access_token', token); // Store the access token\n    }\n\n    ReactGA.initialize('UA-172518785-1');\n    ReactGA.pageview(window.location.pathname);\n\n    this.state = {\n      userId: '',\n      loggedIn: token ? true : false,\n      profPic: '',\n      name: '',\n    };\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  getHashParams() {\n    let hashParams = {};\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  // Function to get user profile from Spotify\n  getUserProfile() {\n    spotifyApi.getMe().then((response) => {\n      if (response.images.length === 0) {\n        this.setState({\n          userId: response.id,\n          profPic: profPic,\n          name: response.display_name,\n        });\n      } else {\n        this.setState({\n          userId: response.id,\n          profPic: response.images[0].url,\n          name: response.display_name,\n        });\n      }\n    });\n  }\n\n // Function to get refresh token\ngetRefreshToken = async () => {\n  const refreshToken = localStorage.getItem('refresh_token');\n  const url = 'https://accounts.spotify.com/api/token';\n\n  // Log to check the stored refresh token\n  console.log('Refresh Token:', refreshToken);\n\n  // Prepare the payload\n  const payload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\n    }),\n  };\n\n  try {\n    // Send the request\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    // Log the response to debug\n    console.log('Refresh Token Response:', response);\n\n    // Check if the response contains the access token\n    if (response.access_token) {\n      localStorage.setItem('access_token', response.access_token); // Store the new access token\n      spotifyApi.setAccessToken(response.access_token); // Set the new access token for API\n    }\n\n    // Check if there is a new refresh token and store it\n    if (response.refresh_token) {\n      localStorage.setItem('refresh_token', response.refresh_token); // Store the new refresh token\n    }\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n  }\n};\n\n\n  // Handle component mounting\n  async componentDidMount() {\n    if (this.state.loggedIn) {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken) {\n        const tokenExpiration = localStorage.getItem('token_expiration');\n        if (!tokenExpiration || Date.now() > tokenExpiration) {\n          // If token has expired, refresh it\n          await this.getRefreshToken();\n        }\n        this.getUserProfile();\n      } else {\n        // If no access token, try to refresh\n        await this.getRefreshToken();\n        this.getUserProfile();\n      }\n    }\n  }\n\n  // Generate random state string for Spotify login\n  generateRandomString(length) {\n    let text = '';\n    const possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  login() {\n    const stateKey = 'spotify_auth_state';\n    const redirect_uri = 'http://localhost:3000/'; // redirect URI\n\n    const state = this.generateRandomString(16);\n\n    localStorage.setItem(stateKey, state);\n    const scope =\n      'user-read-private user-read-email playlist-read-private playlist-modify-public playlist-modify-private';\n    let url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=token';\n    url += '&client_id=' + encodeURIComponent(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\n    url += '&scope=' + encodeURIComponent(scope);\n    url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n    url += '&state=' + encodeURIComponent(state);\n\n    window.location = url;\n  }\n\n  logout() {\n    this.setState({\n      loggedIn: false,\n    });\n    window.location.href = '';\n  }\n\n  render() {\n    const userId = this.state.userId;\n\n    return (\n      <div className=\"App\">\n        {this.state.loggedIn ? (\n          <div>\n            <div className=\"row profile\">\n              <div className=\"col-4 col-sm-4 col-lg-1 col-md-3\">\n                <img\n                  src={this.state.profPic}\n                  className=\"profPic rounded-circle img-fluid\"\n                  alt=\"profile pic\"\n                />\n              </div>\n              <div className=\"col-8 col-sm-8 col-lg-11 col-md-9 text-left ml-n3\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger btn-sm mx-0 logout float-right\"\n                  onClick={this.logout}\n                >\n                  Log Out\n                </button>\n                <h1 className=\"profName\">{this.state.name}</h1>\n              </div>\n            </div>\n            <Playlists user={userId}></Playlists>\n          </div>\n        ) : (\n          <div id=\"login\" className=\"pt-5\">\n            <Fade top>\n              <div>\n                <img\n                  src={logo}\n                  className=\"logo img-fluid text-center\"\n                  alt=\"logo\"\n                />\n                <h1 className=\"logo-title font-weight-bold\">Cleanify</h1>\n              </div>\n            </Fade>\n            <Zoom delay={1000}>\n              <div>\n                <button\n                  id=\"login-button\"\n                  onClick={this.login}\n                  className=\"btn btn-success\"\n                >\n                  Log in with Spotify\n                </button>\n              </div>\n            </Zoom>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}