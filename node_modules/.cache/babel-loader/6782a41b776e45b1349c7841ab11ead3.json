{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/cleanify/client/src/App.js\";\nimport React, { Component } from 'react';\nimport profPic from './profPic.png';\nimport './App.css';\nimport Playlists from './components/Playlists';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      userId: '',\n      loggedIn: params.access_token ? true : false,\n      profPic: '',\n      name: ''\n    };\n    this.login = this.login.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getUserProfile() {\n    spotifyApi.getMe().then(response => {\n      console.log(response);\n\n      if (response.images.length === 0) {\n        this.setState({\n          userId: response.id,\n          profPic: profPic,\n          name: response.display_name\n        });\n      } else {\n        this.setState({\n          userId: response.id,\n          profPic: response.images[0].url,\n          name: response.display_name\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      this.getUserProfile();\n    }\n  }\n\n  generateRandomString(length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n  }\n\n  login() {\n    var stateKey = 'spotify_auth_state';\n    var client_id = '69862027b9b54d9eb6f6dd2ae3ed3050'; // Your client id\n\n    var redirect_uri = 'https://briiking4.github.io/cleanify/'; // Your redirect uri\n\n    var state = this.generateRandomString(16);\n    localStorage.setItem(stateKey, state);\n    var scope = 'user-read-private user-read-email playlist-read-private playlist-modify-public playlist-modify-private';\n    var url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=token';\n    url += '&client_id=' + encodeURIComponent(client_id);\n    url += '&scope=' + encodeURIComponent(scope);\n    url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n    url += '&state=' + encodeURIComponent(state);\n    window.location = url;\n  }\n\n  render() {\n    const userId = this.state.userId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, this.state.loggedIn ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.profPic,\n      className: \"profPic rounded-circle\",\n      alt: \"profile pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"profName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, this.state.name)), /*#__PURE__*/React.createElement(Playlists, {\n      user: userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://briiking4.github.io/cleanify/logo.png\",\n      class: \"img-fluid\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Cleanify\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"login-button\",\n      onClick: \"http://localhost:8888\",\n      class: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Log in with Spotify\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianaking/Desktop/cleanify/client/src/App.js"],"names":["React","Component","profPic","Playlists","SpotifyWebApi","spotifyApi","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","userId","loggedIn","name","login","bind","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getUserProfile","getMe","then","response","console","log","images","length","setState","id","display_name","url","componentDidMount","generateRandomString","text","possible","i","charAt","Math","floor","random","stateKey","client_id","redirect_uri","localStorage","setItem","scope","encodeURIComponent","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport profPic from './profPic.png';\n\nimport './App.css';\nimport Playlists from './components/Playlists'\n\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n\nconstructor (){\n  super();\n  const params = this.getHashParams();\n  const token = params.access_token;\n\n\n  if (token) {\n     spotifyApi.setAccessToken(token);\n  }\n\n  this.state ={\n    userId: '',\n    loggedIn: params.access_token ? true : false,\n    profPic: '',\n    name: ''\n  }\n  this.login = this.login.bind(this)\n}\n\n\n getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n\n  getUserProfile(){\n    spotifyApi.getMe()\n      .then((response) => {\n        console.log(response)\n        if ((response.images.length === 0)){\n          this.setState ({\n            userId: response.id,\n            profPic: profPic,\n            name: response.display_name\n          })\n        }else{\n          this.setState ({\n            userId: response.id,\n            profPic: response.images[0].url,\n            name: response.display_name\n          })\n        }\n      })\n  }\n\n  componentDidMount(){\n    if(this.state.loggedIn){\n      this.getUserProfile()\n    }\n  }\n\n\n generateRandomString(length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n\n  login() {\n    var stateKey = 'spotify_auth_state';\n\n    var client_id = '69862027b9b54d9eb6f6dd2ae3ed3050'; // Your client id\n    var redirect_uri = 'https://briiking4.github.io/cleanify/'; // Your redirect uri\n\n    var state = this.generateRandomString(16);\n\n    localStorage.setItem(stateKey, state);\n    var scope = 'user-read-private user-read-email playlist-read-private playlist-modify-public playlist-modify-private';\n\n    var url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=token';\n    url += '&client_id=' + encodeURIComponent(client_id);\n    url += '&scope=' + encodeURIComponent(scope);\n    url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n    url += '&state=' + encodeURIComponent(state);\n\n    window.location = url;\n  };\n\n\n\n\n  render(){\n    const userId = this.state.userId\n\n\n    return (\n\n      <div className=\"App\">\n\n        {\n          this.state.loggedIn ?\n           <div>\n              <div className=\"row profile\">\n                <img src= {this.state.profPic} className=\"profPic rounded-circle\" alt=\"profile pic\"/>\n                <h1 className=\"profName\">{this.state.name}</h1>\n              </div>\n              <Playlists user= {userId}></Playlists>\n            </div>\n          :\n          <div id=\"login\">\n            <img src=\"https://briiking4.github.io/cleanify/logo.png\" class=\"img-fluid\" alt=\"logo\"/>\n            <h1>Cleanify</h1>\n            <button id=\"login-button\" onClick=\"http://localhost:8888\" class=\"btn btn-success\">Log in with Spotify</button>\n          </div>\n\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}