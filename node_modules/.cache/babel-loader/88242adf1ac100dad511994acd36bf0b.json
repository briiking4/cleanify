{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/Spotify API/my-app/src/components/CleanPlaylist.js\";\nimport React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeClean = () => {\n      var trackUri = [];\n      this.findCleanTracks();\n      this.state.cleanTracks.map(track => {\n        trackUri.push(track.uri);\n      });\n      spotifyApi.createPlaylist(this.state.userId, {\n        name: this.state.playlistName + \"(Clean)\"\n      }).then(response => {\n        console.log(response);\n      });\n    };\n\n    this.state = {\n      userId: this.props.user,\n      ownerId: '',\n      playlistName: this.props.name,\n      explicitTracks: [],\n      cleanTracks: [],\n      NewPlaylistTracks: []\n    };\n    this.makeClean = this.makeClean.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    var playlistId = this.props.data;\n    var ownerId = this.props.id;\n    this.getTracksData(ownerId, playlistId);\n  }\n\n  getTracksData(owner, id) {\n    var explicitTracksList = [];\n    var cleanTracksList = [];\n    spotifyApi.getPlaylistTracks(owner, id).then(response => {\n      console.log(response);\n      response.items.map(item => {\n        if (item.track.explicit === true) {\n          explicitTracksList.push(item.track);\n        } else {\n          cleanTracksList.push(item.track);\n        }\n      });\n      this.setState({\n        explicitTracks: explicitTracksList,\n        cleanTracks: cleanTracksList\n      });\n      console.log(this.state.explicitTracks);\n      console.log(this.state.cleanTracks);\n    });\n  }\n\n  findCleanTracks() {\n    const explicitList = this.state.explicitTracks;\n    explicitList.map(itemE => {\n      console.log(itemE);\n      spotifyApi.search('track:' + '\"' + itemE.name + '\"' + ' artist:' + '\"' + itemE.artists[0].name + '\"', ['track']).then(response => {\n        console.log(response);\n        response.tracks.items.map(itemC => {\n          console.log(itemC);\n\n          if (itemE.artists[0].name === itemC.artists[0].name && itemE.name === itemC.name && !itemC.explicit || itemC.name.includes(\"Clean\")) {\n            this.setState(state => {\n              const cleanTracks = state.cleanTracks.concat(itemC);\n              return {\n                cleanTracks: cleanTracks\n              };\n            });\n            console.log(\"YES: \" + itemC.name);\n          } else {\n            console.log(\"couldn't add: \" + itemC.name);\n          }\n        });\n      });\n    });\n  }\n\n  render() {\n    const test = this.state.cleanTracks;\n    console.log(test);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-lg btn-success\",\n      onClick: this.makeClean,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, \"Clean Playlist\"));\n  }\n\n}\n\nexport default CleanPlaylist;","map":{"version":3,"sources":["/Users/brianaking/Desktop/Spotify API/my-app/src/components/CleanPlaylist.js"],"names":["React","SpotifyWebApi","spotifyApi","CleanPlaylist","Component","constructor","props","makeClean","trackUri","findCleanTracks","state","cleanTracks","map","track","push","uri","createPlaylist","userId","name","playlistName","then","response","console","log","user","ownerId","explicitTracks","NewPlaylistTracks","bind","componentDidMount","playlistId","data","id","getTracksData","owner","explicitTracksList","cleanTracksList","getPlaylistTracks","items","item","explicit","setState","explicitList","itemE","search","artists","tracks","itemC","includes","concat","render","test"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      userId: this.props.user,\n      ownerId: '',\n      playlistName: this.props.name,\n      explicitTracks: [],\n      cleanTracks: [],\n      NewPlaylistTracks: [],\n    };\n    this.makeClean = this.makeClean.bind(this)\n  }\n\n\n  componentDidMount(){\n    console.log(\"mounted\")\n    var playlistId = this.props.data\n    var ownerId = this.props.id\n    this.getTracksData(ownerId, playlistId)\n  }\n\n  getTracksData(owner, id){\n    var explicitTracksList = []\n    var cleanTracksList = []\n    spotifyApi.getPlaylistTracks(owner, id)\n      .then((response) => {\n        console.log(response)\n\n        response.items.map((item) =>{\n          if(item.track.explicit === true){\n            explicitTracksList.push(item.track)\n          }else{\n            cleanTracksList.push(item.track)\n          }\n        })\n          this.setState({\n            explicitTracks: explicitTracksList,\n            cleanTracks: cleanTracksList\n          })\n          console.log(this.state.explicitTracks)\n          console.log(this.state.cleanTracks)\n      })\n    }\n\n    findCleanTracks(){\n      const explicitList = this.state.explicitTracks;\n      explicitList.map((itemE) =>{\n        console.log(itemE)\n        spotifyApi.search('track:' + '\"' +itemE.name+ '\"'  + ' artist:'+ '\"' +itemE.artists[0].name + '\"',['track'])\n          .then((response) => {\n            console.log(response)\n            response.tracks.items.map((itemC) =>{\n              console.log(itemC)\n              if (itemE.artists[0].name === itemC.artists[0].name && itemE.name === itemC.name && !itemC.explicit || itemC.name.includes(\"Clean\")){\n                this.setState((state) =>{\n                  const cleanTracks = state.cleanTracks.concat(itemC)\n                  return{\n                    cleanTracks: cleanTracks\n                  };\n                });\n                console.log(\"YES: \" + itemC.name)\n              }else{\n                console.log(\"couldn't add: \" + itemC.name)\n              }\n            })\n          })\n      })\n    }\n\n    makeClean = () => {\n      var trackUri = [];\n      this.findCleanTracks();\n      this.state.cleanTracks.map((track) =>{\n        trackUri.push(track.uri)\n      })\n      spotifyApi.createPlaylist(this.state.userId, {name: this.state.playlistName + \"(Clean)\"})\n        .then((response) =>{\n          console.log(response)\n        })\n    }\n\n  render(){\n    const test = this.state.cleanTracks\n    console.log(test)\n\n\n    return(\n      <div>\n      <button type=\"button\" className=\"btn btn-lg btn-success\" onClick= {this.makeClean}>Clean Playlist</button>\n      </div>\n\n    )\n  }\n}\n\nexport default CleanPlaylist\n"]},"metadata":{},"sourceType":"module"}