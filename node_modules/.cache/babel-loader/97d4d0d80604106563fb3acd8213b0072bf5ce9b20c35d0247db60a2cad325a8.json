{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/cleanify/src/components/CleanPlaylist.js\";\nimport React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nclass CleanPlaylist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: this.props.user,\n      playlistName: this.props.name,\n      playlistId: this.props.data,\n      ownerId: '',\n      buttonPressed: false,\n      loadingData: false,\n      newPlaylistId: '',\n      revealUnable: false\n    };\n    this.explicitTracks = [];\n    this.cleanTracks = [];\n    this.noCleanVersions = [];\n    this.recTracks = [];\n    this.timesClicked = 1;\n    this.unaddCounter = 1;\n    this.openPlaylist = \"\";\n    this.makeCleanPlaylist = this.makeCleanPlaylist.bind(this);\n    this.findCleanTrack = this.findCleanTrack.bind(this);\n    this.getRecommended = this.getRecommended.bind(this);\n    this.unableToAdd = this.unableToAdd.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n  }\n  getTracksData(owner, id) {\n    var explicitTracksList = [];\n    var cleanTracksList = [];\n    spotifyApi.getPlaylistTracks(owner, id).then(response => {\n      response.items.map(item => {\n        if (item.track.explicit === true) {\n          explicitTracksList.push(item.track);\n        } else {\n          cleanTracksList.push(item.track);\n        }\n      });\n    });\n    this.explicitTracks = explicitTracksList;\n    this.cleanTracks = cleanTracksList;\n  }\n  componentDidMount() {\n    var playlistId = this.props.data;\n    var ownerId = this.props.id;\n    this.getTracksData(ownerId, playlistId);\n    window.scrollTo(0, 0);\n  }\n  async findCleanTrack(track) {\n    var name = track.name;\n    var artist = track.artists[0].name;\n    var cleanTrack;\n    var itemC;\n    var counter = 0;\n    let searchResult = await spotifyApi.search('track: ' + name + ' artist: ' + '\"' + artist + '\"', ['track']);\n    for (itemC of searchResult.tracks.items) {\n      if (itemC.explicit === false) {\n        if ((itemC.name === name || itemC.name.includes(\"Clean\")) && itemC.artists[0].name === artist && counter <= 0) {\n          cleanTrack = itemC;\n          counter++;\n        }\n      }\n    }\n    if (counter === 0) {\n      cleanTrack = null;\n    }\n    return cleanTrack;\n  }\n  async makeCleanPlaylist() {\n    this.setState({\n      loadingData: true\n    });\n    var itemE;\n    for (itemE of this.explicitTracks) {\n      let cleanTrack = await this.findCleanTrack(itemE);\n      if (cleanTrack === null) {\n        this.noCleanVersions.push(itemE);\n      } else {\n        this.cleanTracks.push(cleanTrack);\n      }\n    }\n    if (this.noCleanVersions.length > 0) {\n      this.recTracks = await this.getRecommended(this.noCleanVersions);\n    }\n    var trackUri = [];\n    var newId = '';\n    var x;\n    for (x of this.cleanTracks) {\n      trackUri.push(x.uri);\n    }\n    let playlistResult = await spotifyApi.createPlaylist(this.state.userId, {\n      name: this.state.playlistName + \"(Clean)\"\n    });\n    this.openPlaylist = playlistResult.external_urls.spotify;\n    newId = playlistResult.id;\n    let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, newId, trackUri);\n    this.setState({\n      newPlaylistId: newId,\n      buttonPressed: true\n    });\n  }\n  async getRecommended(tracks) {\n    var trackId = [];\n    var tracksList = tracks.slice();\n    var recTracks = [];\n    if (tracks.length > 5) {\n      tracksList.splice(5, tracks.length);\n    }\n    tracksList.map(item => {\n      trackId.push(item.id);\n    });\n    let recommededResult = await spotifyApi.getRecommendations({\n      limit: 20,\n      seed_tracks: trackId\n    });\n    var itemR;\n    for (itemR of recommededResult.tracks) {\n      if (itemR.explicit === true) {\n        let cleanTrack = await this.findCleanTrack(itemR);\n        if (cleanTrack !== null) {\n          recTracks.push(cleanTrack);\n        }\n      } else {\n        recTracks.push(itemR);\n      }\n    }\n    if (recTracks.length > 10) {\n      recTracks = recTracks.slice(0, 10);\n    }\n    return recTracks;\n  }\n  unableToAdd() {\n    this.timesClicked++;\n    if (this.timesClicked % 2 === 0) {\n      this.setState({\n        revealUnable: true\n      });\n    } else {\n      this.setState({\n        revealUnable: false\n      });\n    }\n  }\n  async addTrack(track) {\n    // this.unaddCounter ++\n    var elem = document.getElementById(track.id);\n    var counter = parseInt(elem.getAttribute(\"clicks\"));\n    var uri = track.uri;\n    counter++;\n    if (counter % 2 === 0) {\n      let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, this.state.newPlaylistId, [uri]);\n      elem.style.backgroundColor = \"green\";\n      elem.innerHTML = \"DONE\";\n    } else {\n      let addResult = await spotifyApi.removeTracksFromPlaylist(this.state.userId, this.state.newPlaylistId, [uri]);\n      elem.style.backgroundColor = \"#565656\";\n      elem.innerHTML = \"ADD\";\n    }\n    elem.setAttribute(\"clicks\", counter);\n  }\n  render() {\n    const unavalible = this.noCleanVersions.map(function (item, index) {\n      index++;\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, \" \", index, \". \", item.name);\n    });\n    const recommendedTracks = this.recTracks.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 col-lg-1 mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-add\",\n        id: item.id,\n        clicks: \"1\",\n        onClick: () => this.addTrack(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, \"ADD\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-9 col-lg-11\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"iframe\", {\n        src: \"https://open.spotify.com/embed/track/\" + item.id,\n        width: \"90%\",\n        height: \"80\",\n        frameBorder: \"0\",\n        allowtransparency: \"true\",\n        allow: \"encrypted-media\",\n        title: \"embeded-track\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }))));\n    }, this);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Clean col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, this.state.buttonPressed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"font-weight-bold text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }, \" Your Playlist Is Cleanified! \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, \" You're done! We have already saved it to your library!\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.openPlaylist,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, \" Open In Spotify \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"fadeshow\",\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      src: \"https://open.spotify.com/embed/playlist/\" + this.state.playlistId,\n      width: \"100%\",\n      height: \"290\",\n      frameBorder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      title: \"embeded-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"i\", {\n      id: \"fadeshow\",\n      className: \"fas fa-arrow-right text-success fa-2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      src: \"https://open.spotify.com/embed/playlist/\" + this.state.newPlaylistId,\n      width: \"100%\",\n      height: \"290\",\n      frameBorder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      title: \"embeded-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"divider mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: this.unableToAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, \" Reveal Songs Unable to be Cleaned: \", this.noCleanVersions.length), this.state.revealUnable && this.noCleanVersions.length > 0 ? unavalible : this.state.revealUnable && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 16\n      }\n    }, \"Good News! We were able to find clean versions of each song!\"), this.noCleanVersions.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"divider mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, \"Recommended Clean Songs\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, \"Based on the songs we were unable to add: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, recommendedTracks)))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-lg btn-success mt-5\",\n      onClick: this.makeCleanPlaylist,\n      disabled: this.state.loadingData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, this.state.loadingData && /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-compact-disc fa-spin text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }), \"Clean Playlist\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      src: \"https://open.spotify.com/embed/playlist/\" + this.state.playlistId,\n      width: \"80%\",\n      height: \"400\",\n      frameBorder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      title: \"embeded-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }, \" Note: Spotify's explicit content tags are applied based on information Spotify receives from rights-holders. They can\\u2019t guarantee all explicit content is marked as such. Cleanify will clean your playlist based off of Spotify's marked explicit/clean songs.\")));\n  }\n}\nexport default CleanPlaylist;","map":{"version":3,"names":["React","SpotifyWebApi","spotifyApi","CleanPlaylist","Component","constructor","props","state","userId","user","playlistName","name","playlistId","data","ownerId","buttonPressed","loadingData","newPlaylistId","revealUnable","explicitTracks","cleanTracks","noCleanVersions","recTracks","timesClicked","unaddCounter","openPlaylist","makeCleanPlaylist","bind","findCleanTrack","getRecommended","unableToAdd","addTrack","getTracksData","owner","id","explicitTracksList","cleanTracksList","getPlaylistTracks","then","response","items","map","item","track","explicit","push","componentDidMount","window","scrollTo","artist","artists","cleanTrack","itemC","counter","searchResult","search","tracks","includes","setState","itemE","length","trackUri","newId","x","uri","playlistResult","createPlaylist","external_urls","spotify","addResult","addTracksToPlaylist","trackId","tracksList","slice","splice","recommededResult","getRecommendations","limit","seed_tracks","itemR","elem","document","getElementById","parseInt","getAttribute","style","backgroundColor","innerHTML","removeTracksFromPlaylist","setAttribute","render","unavalible","index","createElement","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","recommendedTracks","className","type","clicks","onClick","src","width","height","frameBorder","allowtransparency","allow","title","href","target","rel","disabled"],"sources":["/Users/brianaking/Desktop/cleanify/src/components/CleanPlaylist.js"],"sourcesContent":["import React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      userId: this.props.user,\n      playlistName: this.props.name,\n      playlistId: this.props.data,\n      ownerId: '',\n      buttonPressed: false,\n      loadingData: false,\n      newPlaylistId: '',\n      revealUnable: false,\n    };\n\n    this.explicitTracks = [];\n    this.cleanTracks = [];\n    this.noCleanVersions = [];\n    this.recTracks = [];\n    this.timesClicked = 1;\n    this.unaddCounter = 1;\n    this.openPlaylist = \"\";\n    this.makeCleanPlaylist = this.makeCleanPlaylist.bind(this)\n    this.findCleanTrack = this.findCleanTrack.bind(this)\n    this.getRecommended = this.getRecommended.bind(this)\n    this.unableToAdd = this.unableToAdd.bind(this)\n    this.addTrack = this.addTrack.bind(this)\n\n\n\n\n  }\n\n\n  getTracksData(owner, id){\n    var explicitTracksList = []\n    var cleanTracksList = []\n    spotifyApi.getPlaylistTracks(owner, id)\n      .then((response) => {\n        response.items.map((item) =>{\n          if(item.track.explicit === true){\n            explicitTracksList.push(item.track)\n          }else{\n            cleanTracksList.push(item.track)\n          }\n        })\n      })\n      this.explicitTracks = explicitTracksList\n      this.cleanTracks = cleanTracksList\n\n\n    }\n\n    componentDidMount(){\n      var playlistId = this.props.data\n      var ownerId = this.props.id\n      this.getTracksData(ownerId, playlistId)\n      window.scrollTo(0, 0)\n    }\n\n    async findCleanTrack(track){\n      var name = track.name\n      var artist = track.artists[0].name\n      var cleanTrack;\n      var itemC;\n      var counter = 0;\n        let searchResult = await spotifyApi.search('track: ' +name+ ' artist: '+ '\"'+ artist + '\"' ,['track'])\n        for (itemC of searchResult.tracks.items){\n          if (itemC.explicit === false){\n            if((itemC.name === name || itemC.name.includes(\"Clean\")) && (itemC.artists[0].name === artist && counter <= 0) ){\n              cleanTrack = itemC\n              counter ++\n            }\n          }\n        }\n        if (counter === 0 ){\n          cleanTrack = null\n        }\n\n        return cleanTrack\n    }\n\n    async makeCleanPlaylist(){\n\n      this.setState({\n        loadingData: true\n      })\n\n      var itemE;\n      for (itemE of this.explicitTracks) {\n        let cleanTrack = await this.findCleanTrack(itemE)\n        if (cleanTrack === null){\n          this.noCleanVersions.push(itemE)\n        }else{\n          this.cleanTracks.push(cleanTrack)\n        }\n      }\n\n      if (this.noCleanVersions.length > 0){\n        this.recTracks = await this.getRecommended(this.noCleanVersions)\n\n      }\n\n       var trackUri = [];\n       var newId = '';\n       var x;\n       for (x of this.cleanTracks){\n         trackUri.push(x.uri)\n       }\n        let playlistResult = await spotifyApi.createPlaylist(this.state.userId, {name: this.state.playlistName + \"(Clean)\"})\n        this.openPlaylist = playlistResult.external_urls.spotify\n        newId = playlistResult.id\n\n        let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, newId, trackUri)\n\n        this.setState({\n          newPlaylistId: newId,\n          buttonPressed: true\n        })\n\n    }\n\n    async getRecommended(tracks){\n      var trackId = [];\n      var tracksList = tracks.slice();\n      var recTracks =[];\n\n      if (tracks.length > 5){\n        tracksList.splice(5,tracks.length)\n      }\n\n      tracksList.map((item) => {\n        trackId.push(item.id)\n      })\n\n      let recommededResult = await spotifyApi.getRecommendations({limit: 20, seed_tracks: trackId})\n      var itemR;\n\n        for (itemR of recommededResult.tracks) {\n          if (itemR.explicit === true){\n            let cleanTrack = await this.findCleanTrack(itemR)\n            if (cleanTrack !== null){\n              recTracks.push(cleanTrack)\n            }\n\n          }else{\n            recTracks.push(itemR)\n          }\n        }\n\n        if (recTracks.length > 10){\n          recTracks = recTracks.slice(0,10)\n        }\n\n      return recTracks\n    }\n\n   unableToAdd(){\n     this.timesClicked ++\n     if (this.timesClicked % 2 === 0){\n       this.setState({\n         revealUnable: true\n       })\n     }else{\n       this.setState({\n         revealUnable: false\n       })\n     }\n    }\n\n     async addTrack(track){\n       // this.unaddCounter ++\n       var elem = document.getElementById(track.id);\n       var counter = parseInt(elem.getAttribute(\"clicks\"))\n       var uri = track.uri\n       counter ++\n       if (counter % 2 === 0){\n         let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"green\";\n         elem.innerHTML = \"DONE\";\n       }else{\n         let addResult = await spotifyApi.removeTracksFromPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"#565656\";\n         elem.innerHTML = \"ADD\";\n\n       }\n       elem.setAttribute(\"clicks\", counter);\n    }\n\n\n  render(){\n\n    const unavalible =\n    this.noCleanVersions.map(function(item, index) {\n      index++\n      return (\n        <p key={item.id}> {index}. {item.name}</p>\n      )\n    });\n\n\n    const recommendedTracks =\n    this.recTracks.map(function(item) {\n      return (\n        <div key= {item.id}>\n        <div className=\"row my-2\">\n          <div className=\"col-3 col-lg-1 mt-3\">\n            <button type=\"button\" className=\"btn btn-add\" id={item.id} clicks = \"1\" onClick={() => this.addTrack(item)}>ADD</button>\n          </div>\n          <div className=\"col-9 col-lg-11\">\n            <iframe src= {\"https://open.spotify.com/embed/track/\" + item.id } width=\"90%\" height=\"80\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-track\"></iframe>\n          </div>\n        </div>\n        </div>\n      )\n    }, this);\n\n\n\n\n\n\n\n    return(\n      <div className= \"Clean col-12\">\n\n      {\n        this.state.buttonPressed ?\n        <div className= \"mx-auto\">\n          <h3 className=\"font-weight-bold text-success\"> Your Playlist Is Cleanified! </h3>\n          <p> You're done! We have already saved it to your library!</p>\n            <a href= {this.openPlaylist} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-success\"> Open In Spotify </a>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div id=\"fadeshow\" className=\"col\">\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.playlistId} width=\"100%\" height=\"290\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n            <i id=\"fadeshow\" className=\"fas fa-arrow-right text-success fa-2x\"></i>\n            <div className=\"col\">\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.newPlaylistId} width=\"100%\" height=\"290\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n          </div>\n        </div>\n          <hr className=\"divider mb-3\"/>\n\n          <div>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.unableToAdd}> Reveal Songs Unable to be Cleaned: {this.noCleanVersions.length}</button>\n            {\n              this.state.revealUnable && this.noCleanVersions.length > 0 ?\n                unavalible\n              :\n              this.state.revealUnable &&\n               <p>Good News! We were able to find clean versions of each song!</p>\n            }\n            {\n              this.noCleanVersions.length > 0 &&\n              <div>\n              <hr className=\"divider mt-5\"/>\n              <h2>Recommended Clean Songs</h2>\n              <p>Based on the songs we were unable to add: </p>\n              <div className=\"container\">\n\n                {recommendedTracks}\n              </div>\n              </div>\n            }\n\n\n          </div>\n\n        </div>\n        :\n          <div>\n            <button type=\"button\" className=\"btn btn-lg btn-success mt-5\" onClick= {this.makeCleanPlaylist} disabled={this.state.loadingData}>\n            { this.state.loadingData &&\n              <i className=\"fa fa-compact-disc fa-spin text-white\"></i>\n            }\n            Clean Playlist\n            </button>\n\n            <div>\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.playlistId} width=\"80%\" height=\"400\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n            <p className=\"text-muted\"> Note: Spotify's explicit content tags are applied based on information Spotify receives from rights-holders. They can’t guarantee all explicit content is marked as such. Cleanify will clean your playlist based off of Spotify's marked explicit/clean songs.</p>\n\n          </div>\n      }\n\n      </div>\n    )\n  }\n}\n\nexport default CleanPlaylist\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}