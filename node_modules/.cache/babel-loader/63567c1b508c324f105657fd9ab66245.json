{"ast":null,"code":"import _regeneratorRuntime from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/brianaking/Desktop/cleanify/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./CleanPlaylist.css';import SpotifyWebApi from'spotify-web-api-js';var spotifyApi=new SpotifyWebApi();var CleanPlaylist=/*#__PURE__*/function(_React$Component){_inherits(CleanPlaylist,_React$Component);var _super=_createSuper(CleanPlaylist);function CleanPlaylist(props){var _this;_classCallCheck(this,CleanPlaylist);_this=_super.call(this,props);_this.state={userId:_this.props.user,playlistName:_this.props.name,playlistId:_this.props.data,ownerId:'',buttonPressed:false,loadingData:false,newPlaylistId:'',revealUnable:false};_this.explicitTracks=[];_this.cleanTracks=[];_this.noCleanVersions=[];_this.recTracks=[];_this.timesClicked=1;_this.unaddCounter=1;_this.openPlaylist=\"\";_this.makeCleanPlaylist=_this.makeCleanPlaylist.bind(_assertThisInitialized(_this));_this.findCleanTrack=_this.findCleanTrack.bind(_assertThisInitialized(_this));_this.getRecommended=_this.getRecommended.bind(_assertThisInitialized(_this));_this.unableToAdd=_this.unableToAdd.bind(_assertThisInitialized(_this));_this.addTrack=_this.addTrack.bind(_assertThisInitialized(_this));return _this;}_createClass(CleanPlaylist,[{key:\"getTracksData\",value:function getTracksData(owner,id){var explicitTracksList=[];var cleanTracksList=[];spotifyApi.getPlaylistTracks(owner,id).then(function(response){response.items.map(function(item){if(item.track.explicit===true){explicitTracksList.push(item.track);}else{cleanTracksList.push(item.track);}});});this.explicitTracks=explicitTracksList;this.cleanTracks=cleanTracksList;}},{key:\"componentDidMount\",value:function componentDidMount(){var playlistId=this.props.data;var ownerId=this.props.id;this.getTracksData(ownerId,playlistId);window.scrollTo(0,0);}},{key:\"findCleanTrack\",value:function(){var _findCleanTrack=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(track){var name,artist,cleanTrack,itemC,counter,searchResult,_iterator,_step;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:name=track.name;artist=track.artists[0].name;counter=0;_context.next=5;return spotifyApi.search('track:'+'\"'+name+'\"'+' artist:'+'\"'+artist+'\"',['track']);case 5:searchResult=_context.sent;_iterator=_createForOfIteratorHelper(searchResult.tracks.items);try{for(_iterator.s();!(_step=_iterator.n()).done;){itemC=_step.value;if(itemC.explicit===false){if((itemC.name===name||itemC.name.includes(\"Clean\"))&&itemC.artists[0].name===artist&&counter<=0){cleanTrack=itemC;counter++;}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(counter===0){cleanTrack=null;}return _context.abrupt(\"return\",cleanTrack);case 10:case\"end\":return _context.stop();}}},_callee);}));function findCleanTrack(_x){return _findCleanTrack.apply(this,arguments);}return findCleanTrack;}()},{key:\"makeCleanPlaylist\",value:function(){var _makeCleanPlaylist=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var itemE,_iterator2,_step2,cleanTrack,trackUri,newId,x,_iterator3,_step3,playlistResult,addResult;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this.setState({loadingData:true});_iterator2=_createForOfIteratorHelper(this.explicitTracks);_context2.prev=2;_iterator2.s();case 4:if((_step2=_iterator2.n()).done){_context2.next=12;break;}itemE=_step2.value;_context2.next=8;return this.findCleanTrack(itemE);case 8:cleanTrack=_context2.sent;if(cleanTrack===null){this.noCleanVersions.push(itemE);}else{this.cleanTracks.push(cleanTrack);}case 10:_context2.next=4;break;case 12:_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](2);_iterator2.e(_context2.t0);case 17:_context2.prev=17;_iterator2.f();return _context2.finish(17);case 20:if(!(this.noCleanVersions.length>0)){_context2.next=24;break;}_context2.next=23;return this.getRecommended(this.noCleanVersions);case 23:this.recTracks=_context2.sent;case 24:trackUri=[];newId='';_iterator3=_createForOfIteratorHelper(this.cleanTracks);try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){x=_step3.value;trackUri.push(x.uri);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}_context2.next=30;return spotifyApi.createPlaylist(this.state.userId,{name:this.state.playlistName+\"(Clean)\"});case 30:playlistResult=_context2.sent;this.openPlaylist=playlistResult.external_urls.spotify;newId=playlistResult.id;_context2.next=35;return spotifyApi.addTracksToPlaylist(this.state.userId,newId,trackUri);case 35:addResult=_context2.sent;this.setState({newPlaylistId:newId,buttonPressed:true});case 37:case\"end\":return _context2.stop();}}},_callee2,this,[[2,14,17,20]]);}));function makeCleanPlaylist(){return _makeCleanPlaylist.apply(this,arguments);}return makeCleanPlaylist;}()},{key:\"getRecommended\",value:function(){var _getRecommended=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tracks){var trackId,tracksList,recTracks,recommededResult,itemR,_iterator4,_step4,cleanTrack;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:trackId=[];tracksList=tracks.slice();recTracks=[];if(tracks.length>5){tracksList.splice(5,tracks.length);}tracksList.map(function(item){trackId.push(item.id);});_context3.next=7;return spotifyApi.getRecommendations({limit:20,seed_tracks:trackId});case 7:recommededResult=_context3.sent;_iterator4=_createForOfIteratorHelper(recommededResult.tracks);_context3.prev=9;_iterator4.s();case 11:if((_step4=_iterator4.n()).done){_context3.next=23;break;}itemR=_step4.value;if(!(itemR.explicit===true)){_context3.next=20;break;}_context3.next=16;return this.findCleanTrack(itemR);case 16:cleanTrack=_context3.sent;if(cleanTrack!==null){recTracks.push(cleanTrack);}_context3.next=21;break;case 20:recTracks.push(itemR);case 21:_context3.next=11;break;case 23:_context3.next=28;break;case 25:_context3.prev=25;_context3.t0=_context3[\"catch\"](9);_iterator4.e(_context3.t0);case 28:_context3.prev=28;_iterator4.f();return _context3.finish(28);case 31:if(recTracks.length>10){recTracks=recTracks.slice(0,10);}return _context3.abrupt(\"return\",recTracks);case 33:case\"end\":return _context3.stop();}}},_callee3,this,[[9,25,28,31]]);}));function getRecommended(_x2){return _getRecommended.apply(this,arguments);}return getRecommended;}()},{key:\"unableToAdd\",value:function unableToAdd(){this.timesClicked++;if(this.timesClicked%2===0){this.setState({revealUnable:true});}else{this.setState({revealUnable:false});}}},{key:\"addTrack\",value:function(){var _addTrack=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(track){var elem,counter,uri,addResult,_addResult;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:// this.unaddCounter ++\nelem=document.getElementById(track.id);counter=parseInt(elem.getAttribute(\"clicks\"));uri=track.uri;counter++;if(!(counter%2===0)){_context4.next=12;break;}_context4.next=7;return spotifyApi.addTracksToPlaylist(this.state.userId,this.state.newPlaylistId,[uri]);case 7:addResult=_context4.sent;elem.style.backgroundColor=\"green\";elem.innerHTML=\"DONE\";_context4.next=17;break;case 12:_context4.next=14;return spotifyApi.removeTracksFromPlaylist(this.state.userId,this.state.newPlaylistId,[uri]);case 14:_addResult=_context4.sent;elem.style.backgroundColor=\"#565656\";elem.innerHTML=\"ADD\";case 17:elem.setAttribute(\"clicks\",counter);case 18:case\"end\":return _context4.stop();}}},_callee4,this);}));function addTrack(_x3){return _addTrack.apply(this,arguments);}return addTrack;}()},{key:\"render\",value:function render(){var unavalible=this.noCleanVersions.map(function(item,index){index++;return/*#__PURE__*/React.createElement(\"p\",{key:item.id},\" \",index,\". \",item.name);});var recommendedTracks=this.recTracks.map(function(item){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{key:item.id},/*#__PURE__*/React.createElement(\"div\",{className:\"row my-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-3 col-lg-1 mt-3\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-add\",id:item.id,clicks:\"1\",onClick:function onClick(){return _this2.addTrack(item);}},\"ADD\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-9 col-lg-11\"},/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/track/\"+item.id,width:\"90%\",height:\"80\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-track\"}))));},this);return/*#__PURE__*/React.createElement(\"div\",{className:\"Clean col-12\"},this.state.buttonPressed?/*#__PURE__*/React.createElement(\"div\",{className:\"mx-auto\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"font-weight-bold text-success\"},\" Your Playlist Is Cleanified! \"),/*#__PURE__*/React.createElement(\"p\",null,\" You're done! We have already saved it to your library!\"),/*#__PURE__*/React.createElement(\"a\",{href:this.openPlaylist,target:\"_blank\",rel:\"noopener noreferrer\",className:\"btn btn-success\"},\" Open In Spotify \"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{id:\"fadeshow\",className:\"col\"},/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/playlist/\"+this.state.playlistId,width:\"100%\",height:\"290\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-playlist\"})),/*#__PURE__*/React.createElement(\"i\",{id:\"fadeshow\",className:\"fas fa-arrow-right text-success fa-2x\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/playlist/\"+this.state.newPlaylistId,width:\"100%\",height:\"290\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-playlist\"})))),/*#__PURE__*/React.createElement(\"hr\",{className:\"divider mb-3\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:this.unableToAdd},\" Reveal Songs Unable to be Cleaned: \",this.noCleanVersions.length),this.state.revealUnable&&this.noCleanVersions.length>0?unavalible:this.state.revealUnable&&/*#__PURE__*/React.createElement(\"p\",null,\"Good News! We were able to find clean versions of each song!\"),this.noCleanVersions.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"hr\",{className:\"divider mt-5\"}),/*#__PURE__*/React.createElement(\"h2\",null,\"Recommended Clean Songs\"),/*#__PURE__*/React.createElement(\"p\",null,\"Based on the songs we were unable to add: \"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},recommendedTracks)))):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-lg btn-success mt-5\",onClick:this.makeCleanPlaylist,disabled:this.state.loadingData},this.state.loadingData&&/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-compact-disc fa-spin text-white\"}),\"Clean Playlist\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/playlist/\"+this.state.playlistId,width:\"80%\",height:\"400\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-playlist\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted\"},\" Note: Spotify's explicit content tags are applied based on information Spotify receives from rights-holders. They can\\u2019t guarantee all explicit content is marked as such. Cleanify will clean your playlist based off of Spotify's marked explicit/clean songs.\")));}}]);return CleanPlaylist;}(React.Component);export default CleanPlaylist;","map":{"version":3,"sources":["/Users/brianaking/Desktop/cleanify/client/src/components/CleanPlaylist.js"],"names":["React","SpotifyWebApi","spotifyApi","CleanPlaylist","props","state","userId","user","playlistName","name","playlistId","data","ownerId","buttonPressed","loadingData","newPlaylistId","revealUnable","explicitTracks","cleanTracks","noCleanVersions","recTracks","timesClicked","unaddCounter","openPlaylist","makeCleanPlaylist","bind","findCleanTrack","getRecommended","unableToAdd","addTrack","owner","id","explicitTracksList","cleanTracksList","getPlaylistTracks","then","response","items","map","item","track","explicit","push","getTracksData","window","scrollTo","artist","artists","counter","search","searchResult","tracks","itemC","includes","cleanTrack","setState","itemE","length","trackUri","newId","x","uri","createPlaylist","playlistResult","external_urls","spotify","addTracksToPlaylist","addResult","trackId","tracksList","slice","splice","getRecommendations","limit","seed_tracks","recommededResult","itemR","elem","document","getElementById","parseInt","getAttribute","style","backgroundColor","innerHTML","removeTracksFromPlaylist","setAttribute","unavalible","index","recommendedTracks","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      userId: this.props.user,\n      playlistName: this.props.name,\n      playlistId: this.props.data,\n      ownerId: '',\n      buttonPressed: false,\n      loadingData: false,\n      newPlaylistId: '',\n      revealUnable: false,\n    };\n\n    this.explicitTracks = [];\n    this.cleanTracks = [];\n    this.noCleanVersions = [];\n    this.recTracks = [];\n    this.timesClicked = 1;\n    this.unaddCounter = 1;\n    this.openPlaylist = \"\";\n    this.makeCleanPlaylist = this.makeCleanPlaylist.bind(this)\n    this.findCleanTrack = this.findCleanTrack.bind(this)\n    this.getRecommended = this.getRecommended.bind(this)\n    this.unableToAdd = this.unableToAdd.bind(this)\n    this.addTrack = this.addTrack.bind(this)\n\n\n\n\n  }\n\n\n  getTracksData(owner, id){\n    var explicitTracksList = []\n    var cleanTracksList = []\n    spotifyApi.getPlaylistTracks(owner, id)\n      .then((response) => {\n\n        response.items.map((item) =>{\n          if(item.track.explicit === true){\n            explicitTracksList.push(item.track)\n          }else{\n            cleanTracksList.push(item.track)\n          }\n        })\n      })\n      this.explicitTracks = explicitTracksList\n      this.cleanTracks = cleanTracksList\n\n\n    }\n\n    componentDidMount(){\n      var playlistId = this.props.data\n      var ownerId = this.props.id\n      this.getTracksData(ownerId, playlistId)\n      window.scrollTo(0, 0)\n    }\n\n    async findCleanTrack(track){\n      var name = track.name\n      var artist = track.artists[0].name\n      var cleanTrack;\n      var itemC;\n      var counter = 0;\n        let searchResult = await spotifyApi.search('track:'+ '\"' +name+ '\"' + ' artist:'+ '\"'+ artist + '\"' ,['track'])\n        for (itemC of searchResult.tracks.items){\n          if (itemC.explicit === false){\n            if((itemC.name === name || itemC.name.includes(\"Clean\")) && (itemC.artists[0].name === artist && counter <= 0) ){\n              cleanTrack = itemC\n              counter ++\n            }\n          }\n        }\n        if (counter === 0 ){\n          cleanTrack = null\n        }\n\n        return cleanTrack\n    }\n\n    async makeCleanPlaylist(){\n\n      this.setState({\n        loadingData: true\n      })\n\n      var itemE;\n      for (itemE of this.explicitTracks) {\n        let cleanTrack = await this.findCleanTrack(itemE)\n        if (cleanTrack === null){\n          this.noCleanVersions.push(itemE)\n        }else{\n          this.cleanTracks.push(cleanTrack)\n        }\n      }\n\n      if (this.noCleanVersions.length > 0){\n        this.recTracks = await this.getRecommended(this.noCleanVersions)\n\n      }\n\n       var trackUri = [];\n       var newId = '';\n       var x;\n       for (x of this.cleanTracks){\n         trackUri.push(x.uri)\n       }\n        let playlistResult = await spotifyApi.createPlaylist(this.state.userId, {name: this.state.playlistName + \"(Clean)\"})\n        this.openPlaylist = playlistResult.external_urls.spotify\n        newId = playlistResult.id\n\n        let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, newId, trackUri)\n\n        this.setState({\n          newPlaylistId: newId,\n          buttonPressed: true\n        })\n\n    }\n\n    async getRecommended(tracks){\n      var trackId = [];\n      var tracksList = tracks.slice();\n      var recTracks =[];\n\n      if (tracks.length > 5){\n        tracksList.splice(5,tracks.length)\n      }\n\n      tracksList.map((item) => {\n        trackId.push(item.id)\n      })\n\n      let recommededResult = await spotifyApi.getRecommendations({limit: 20, seed_tracks: trackId})\n      var itemR;\n\n        for (itemR of recommededResult.tracks) {\n          if (itemR.explicit === true){\n            let cleanTrack = await this.findCleanTrack(itemR)\n            if (cleanTrack !== null){\n              recTracks.push(cleanTrack)\n            }\n\n          }else{\n            recTracks.push(itemR)\n          }\n        }\n\n        if (recTracks.length > 10){\n          recTracks = recTracks.slice(0,10)\n        }\n\n      return recTracks\n    }\n\n   unableToAdd(){\n     this.timesClicked ++\n     if (this.timesClicked % 2 === 0){\n       this.setState({\n         revealUnable: true\n       })\n     }else{\n       this.setState({\n         revealUnable: false\n       })\n     }\n    }\n\n     async addTrack(track){\n       // this.unaddCounter ++\n       var elem = document.getElementById(track.id);\n       var counter = parseInt(elem.getAttribute(\"clicks\"))\n       var uri = track.uri\n       counter ++\n       if (counter % 2 === 0){\n         let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"green\";\n         elem.innerHTML = \"DONE\";\n       }else{\n         let addResult = await spotifyApi.removeTracksFromPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"#565656\";\n         elem.innerHTML = \"ADD\";\n\n       }\n       elem.setAttribute(\"clicks\", counter);\n    }\n\n\n  render(){\n\n    const unavalible =\n    this.noCleanVersions.map(function(item, index) {\n      index++\n      return (\n        <p key={item.id}> {index}. {item.name}</p>\n      )\n    });\n\n\n    const recommendedTracks =\n    this.recTracks.map(function(item) {\n      return (\n        <div key= {item.id}>\n        <div className=\"row my-2\">\n          <div className=\"col-3 col-lg-1 mt-3\">\n            <button type=\"button\" className=\"btn btn-add\" id={item.id} clicks = \"1\" onClick={() => this.addTrack(item)}>ADD</button>\n          </div>\n          <div className=\"col-9 col-lg-11\">\n            <iframe src= {\"https://open.spotify.com/embed/track/\" + item.id } width=\"90%\" height=\"80\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-track\"></iframe>\n          </div>\n        </div>\n        </div>\n      )\n    }, this);\n\n\n\n\n\n\n\n    return(\n      <div className= \"Clean col-12\">\n\n      {\n        this.state.buttonPressed ?\n        <div className= \"mx-auto\">\n          <h3 className=\"font-weight-bold text-success\"> Your Playlist Is Cleanified! </h3>\n          <p> You're done! We have already saved it to your library!</p>\n            <a href= {this.openPlaylist} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-success\"> Open In Spotify </a>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div id=\"fadeshow\" className=\"col\">\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.playlistId} width=\"100%\" height=\"290\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n            <i id=\"fadeshow\" className=\"fas fa-arrow-right text-success fa-2x\"></i>\n            <div className=\"col\">\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.newPlaylistId} width=\"100%\" height=\"290\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n          </div>\n        </div>\n          <hr className=\"divider mb-3\"/>\n\n          <div>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.unableToAdd}> Reveal Songs Unable to be Cleaned: {this.noCleanVersions.length}</button>\n            {\n              this.state.revealUnable && this.noCleanVersions.length > 0 ?\n                unavalible\n              :\n              this.state.revealUnable &&\n               <p>Good News! We were able to find clean versions of each song!</p>\n            }\n            {\n              this.noCleanVersions.length > 0 &&\n              <div>\n              <hr className=\"divider mt-5\"/>\n              <h2>Recommended Clean Songs</h2>\n              <p>Based on the songs we were unable to add: </p>\n              <div className=\"container\">\n\n                {recommendedTracks}\n              </div>\n              </div>\n            }\n\n\n          </div>\n\n        </div>\n        :\n          <div>\n            <button type=\"button\" className=\"btn btn-lg btn-success mt-5\" onClick= {this.makeCleanPlaylist} disabled={this.state.loadingData}>\n            { this.state.loadingData &&\n              <i className=\"fa fa-compact-disc fa-spin text-white\"></i>\n            }\n            Clean Playlist\n            </button>\n\n            <div>\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.playlistId} width=\"80%\" height=\"400\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n            <p className=\"text-muted\"> Note: Spotify's explicit content tags are applied based on information Spotify receives from rights-holders. They can’t guarantee all explicit content is marked as such. Cleanify will clean your playlist based off of Spotify's marked explicit/clean songs.</p>\n\n          </div>\n      }\n\n      </div>\n    )\n  }\n}\n\nexport default CleanPlaylist\n"]},"metadata":{},"sourceType":"module"}