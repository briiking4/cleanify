{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/Spotify API/my-app/src/components/Playlists.js\";\nimport React from 'react';\nimport CleanPlaylist from './CleanPlaylist';\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.playlistIsSelected = event => {\n      var currentPlaylist = event.target.getAttribute(\"id\");\n      this.setState({\n        playlistSelected: true,\n        currentSelected: currentPlaylist\n      });\n    };\n\n    this.state = {\n      playlistList: [],\n      playlistSelected: false,\n      currentSelected: ''\n    };\n  }\n\n  getPlaylistData() {\n    var playlistItems = [];\n    spotifyApi.getUserPlaylists().then((response, onRejected) => {\n      console.log(response);\n      response.items.map(item => {\n        playlistItems.push({\n          ownerId: item.owner.id,\n          id: item.id,\n          name: item.name,\n          image: item.images[0].url\n        });\n        return playlistItems;\n      });\n      this.setState({\n        playlistList: playlistItems\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPlaylistData();\n  }\n\n  render() {\n    const selected = this.playlistIsSelected;\n    const showPlaylist = this.state.playlistList.map(function (playlist) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: playlist.id,\n        className: \"col-md-4 col-lg-3 col-6 card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: playlist.image,\n        id: playlist.id,\n        data: playlist.ownerId,\n        className: \"card-img card-img-top\",\n        onClick: selected,\n        alt: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        id: playlist.id,\n        className: \"btn\",\n        onClick: selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-play fa-3x text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 94\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-text font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }\n      }, playlist.name)));\n    });\n    const playlistId = this.state.currentSelected;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, this.state.playlistSelected ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CleanPlaylist, {\n      id: playlistId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"iframe\", {\n      src: \"https://open.spotify.com/embed/playlist/\" + this.state.currentSelected,\n      width: \"50%\",\n      height: \"500\",\n      frameBorder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-playlists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Playlists\"), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"divider mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, showPlaylist)));\n  }\n\n}\n\nexport default Playlists;","map":{"version":3,"sources":["/Users/brianaking/Desktop/Spotify API/my-app/src/components/Playlists.js"],"names":["React","CleanPlaylist","SpotifyWebApi","spotifyApi","Playlists","Component","constructor","props","playlistIsSelected","event","currentPlaylist","target","getAttribute","setState","playlistSelected","currentSelected","state","playlistList","getPlaylistData","playlistItems","getUserPlaylists","then","response","onRejected","console","log","items","map","item","push","ownerId","owner","id","name","image","images","url","componentDidMount","render","selected","showPlaylist","playlist","playlistId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CleanPlaylist from './CleanPlaylist'\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      playlistList: [],\n      playlistSelected: false,\n      currentSelected: '',\n    };\n  }\n\n  getPlaylistData(){\n    var playlistItems= [];\n\n      spotifyApi.getUserPlaylists()\n         .then((response, onRejected) => {\n           console.log(response)\n\n             response.items.map((item) => {\n               playlistItems.push({ownerId: item.owner.id, id: item.id, name:item.name, image: item.images[0].url})\n               return playlistItems\n             })\n            this.setState({\n              playlistList: playlistItems\n            })\n         });\n\n   }\n\n   componentDidMount(){\n     this.getPlaylistData()\n   }\n\n   playlistIsSelected = (event) => {\n\n     var currentPlaylist = event.target.getAttribute(\"id\")\n     this.setState({\n       playlistSelected: true,\n       currentSelected: currentPlaylist\n     });\n\n   }\n\n\n  render(){\n    const selected = this.playlistIsSelected\n\n    const showPlaylist =\n      this.state.playlistList.map(function(playlist){\n        return (\n          <div key={playlist.id} className=\"col-md-4 col-lg-3 col-6 card\">\n              <img src={playlist.image} id= {playlist.id} data = {playlist.ownerId} className=\"card-img card-img-top\" onClick= {selected} alt=\"card\"/>\n              <div className= \"card-button\">\n                <button type=\"button\" id= {playlist.id} className=\"btn\" onClick= {selected}> <i className=\"fas fa-play fa-3x text-white\"></i></button>\n              </div>\n             <div className=\"card-body\">\n               <p className=\"card-text font-weight-bold\">{playlist.name}</p>\n             </div>\n          </div>\n           )\n      });\n      const playlistId = this.state.currentSelected\n\n    return (\n      <div className=\"Playlist\">\n\n      {\n        this.state.playlistSelected ?\n        <div>\n        <CleanPlaylist id= {playlistId} ></CleanPlaylist>\n        <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.currentSelected} width=\"50%\" height=\"500\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n        </div>\n        : <div className=\"user-playlists\">\n            <h3 className=\"font-weight-bold\">Playlists</h3>\n            <hr className=\"divider mb-5\"/>\n            <div className=\"row\">\n              {showPlaylist}\n              </div>\n          </div>\n      }\n      </div>\n\n\n\n\n    );\n\n  }\n}\n\n\nexport default Playlists\n"]},"metadata":{},"sourceType":"module"}