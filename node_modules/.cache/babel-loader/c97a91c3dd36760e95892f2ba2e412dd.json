{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/Spotify API/my-app/src/components/CleanPlaylist.js\";\nimport React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ownerId: '',\n      explicitTracks: []\n    };\n    this.createNewClean = this.createNewClean.bind(this);\n  }\n\n  componentDidMount() {\n    const playlistId = this.props.data;\n    const ownerId = this.props.id;\n    this.getTracksData(ownerId, playlistId);\n  }\n\n  getTracksData(owner, id) {\n    var explicitTracksList = [];\n    spotifyApi.getPlaylistTracks(owner, id).then(response => {\n      console.log(response);\n      response.items.map(item => {\n        if (item.track.explicit === true) {\n          explicitTracksList.push(item);\n        }\n\n        return explicitTracksList;\n      });\n      this.setState({\n        explicitTracks: explicitTracksList\n      });\n      console.log(this.state.explicitTracks);\n    });\n  }\n\n  createNewClean() {\n    var explicitList = this.state.explicitTracks;\n    explicitList.map(item => {\n      spotifyApi.search(item.track.name + ' artist:' + item.track.artists[0].name, ['track']).then(response => {\n        console.log(response);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-lg btn-success\",\n      onClick: this.createNewClean,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, \"Clean Playlist\"));\n  }\n\n}\n\nexport default CleanPlaylist;","map":{"version":3,"sources":["/Users/brianaking/Desktop/Spotify API/my-app/src/components/CleanPlaylist.js"],"names":["React","SpotifyWebApi","spotifyApi","CleanPlaylist","Component","constructor","props","state","ownerId","explicitTracks","createNewClean","bind","componentDidMount","playlistId","data","id","getTracksData","owner","explicitTracksList","getPlaylistTracks","then","response","console","log","items","map","item","track","explicit","push","setState","explicitList","search","name","artists","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;AAEA,MAAME,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,cAAc,EAAE;AAFL,KAAb;AAIA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,UAAU,GAAG,KAAKP,KAAL,CAAWQ,IAA9B;AACA,UAAMN,OAAO,GAAG,KAAKF,KAAL,CAAWS,EAA3B;AACA,SAAKC,aAAL,CAAmBR,OAAnB,EAA4BK,UAA5B;AACD;;AAEDG,EAAAA,aAAa,CAACC,KAAD,EAAQF,EAAR,EAAW;AACtB,QAAIG,kBAAkB,GAAG,EAAzB;AACAhB,IAAAA,UAAU,CAACiB,iBAAX,CAA6BF,KAA7B,EAAoCF,EAApC,EACGK,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAA,MAAAA,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAoBC,IAAD,IAAS;AAC1B,YAAGA,IAAI,CAACC,KAAL,CAAWC,QAAX,KAAwB,IAA3B,EAAgC;AAC9BV,UAAAA,kBAAkB,CAACW,IAAnB,CAAwBH,IAAxB;AACD;;AACD,eAAOR,kBAAP;AACD,OALD;AAME,WAAKY,QAAL,CAAc;AACZrB,QAAAA,cAAc,EAAES;AADJ,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWE,cAAvB;AACH,KAdH;AAeC;;AAEDC,EAAAA,cAAc,GAAE;AACd,QAAIqB,YAAY,GAAG,KAAKxB,KAAL,CAAWE,cAA9B;AACAsB,IAAAA,YAAY,CAACN,GAAb,CAAkBC,IAAD,IAAS;AACxBxB,MAAAA,UAAU,CAAC8B,MAAX,CAAkBN,IAAI,CAACC,KAAL,CAAWM,IAAX,GAAkB,UAAlB,GAA+BP,IAAI,CAACC,KAAL,CAAWO,OAAX,CAAmB,CAAnB,EAAsBD,IAAvE,EAA4E,CAAC,OAAD,CAA5E,EACGb,IADH,CACSC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAHH;AAKD,KAND;AASD;;AAEHc,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,wBAAhC;AAAyD,MAAA,OAAO,EAAE,KAAKzB,cAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADF;AAKD;;AAtDwC;;AAyD3C,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      ownerId: '',\n      explicitTracks: []\n    };\n    this.createNewClean = this.createNewClean.bind(this)\n  }\n\n  componentDidMount(){\n    const playlistId = this.props.data\n    const ownerId = this.props.id\n    this.getTracksData(ownerId, playlistId)\n  }\n\n  getTracksData(owner, id){\n    var explicitTracksList = []\n    spotifyApi.getPlaylistTracks(owner, id)\n      .then((response) => {\n        console.log(response)\n\n        response.items.map((item) =>{\n          if(item.track.explicit === true){\n            explicitTracksList.push(item)\n          }\n          return explicitTracksList\n        })\n          this.setState({\n            explicitTracks: explicitTracksList\n          })\n          console.log(this.state.explicitTracks)\n      })\n    }\n\n    createNewClean(){\n      var explicitList = this.state.explicitTracks\n      explicitList.map((item) =>{\n        spotifyApi.search(item.track.name + ' artist:' + item.track.artists[0].name,['track'])\n          .then((response) => {\n            console.log(response)\n          })\n\n      })\n\n\n    }\n\n  render(){\n    return(\n      <div>\n      <button type=\"button\" className=\"btn btn-lg btn-success\" onClick={this.createNewClean}>Clean Playlist</button>\n      </div>\n    )\n  }\n}\n\nexport default CleanPlaylist\n"]},"metadata":{},"sourceType":"module"}