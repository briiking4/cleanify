{"ast":null,"code":"import React,{Component}from'react';import profPic from'./profPic.png';import logo from'./logo.png';import Zoom from'react-reveal/Zoom';import Fade from'react-reveal/Fade';import'./App.css';import Playlists from'./components/Playlists';import SpotifyWebApi from'spotify-web-api-js';import ReactGA from'react-ga';const spotifyApi=new SpotifyWebApi();class App extends Component{constructor(){super();// Function to get refresh token\nthis.getRefreshToken=async()=>{const refreshToken=localStorage.getItem('refresh_token');const url='https://accounts.spotify.com/api/token';// Log to check the stored refresh token\nconsole.log('Refresh Token:',refreshToken);// Prepare the payload\nconst payload={method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams({grant_type:'refresh_token',refresh_token:refreshToken,client_id:process.env.REACT_APP_SPOTIFY_CLIENT_ID})};try{// Send the request\nconst body=await fetch(url,payload);const response=await body.json();// Log the response to debug\nconsole.log('Refresh Token Response:',response);// Check if the response contains the access token\nif(response.access_token){localStorage.setItem('access_token',response.access_token);// Store the new access token\nspotifyApi.setAccessToken(response.access_token);// Set the new access token for API\n}// Check if there is a new refresh token and store it\nif(response.refresh_token){localStorage.setItem('refresh_token',response.refresh_token);// Store the new refresh token\n}}catch(error){console.error('Error refreshing token:',error);}};const params=this.getHashParams();const token=params.access_token;console.log(process.env.REACT_APP_SPOTIFY_CLIENT_ID);// Set token if it exists in the URL\nif(token){spotifyApi.setAccessToken(token);localStorage.setItem('access_token',token);// Store the access token\n}ReactGA.initialize('UA-172518785-1');ReactGA.pageview(window.location.pathname);this.state={userId:'',loggedIn:token?true:false,profPic:'',name:''};this.login=this.login.bind(this);this.logout=this.logout.bind(this);}getHashParams(){let hashParams={};let e,r=/([^&;=]+)=?([^&;]*)/g,q=window.location.hash.substring(1);while(e=r.exec(q)){hashParams[e[1]]=decodeURIComponent(e[2]);}return hashParams;}// Function to get user profile from Spotify\ngetUserProfile(){spotifyApi.getMe().then(response=>{if(response.images.length===0){this.setState({userId:response.id,profPic:profPic,name:response.display_name});}else{this.setState({userId:response.id,profPic:response.images[0].url,name:response.display_name});}});}// Handle component mounting\nasync componentDidMount(){if(this.state.loggedIn){const accessToken=localStorage.getItem('access_token');if(accessToken){const tokenExpiration=localStorage.getItem('token_expiration');if(!tokenExpiration||Date.now()>tokenExpiration){// If token has expired, refresh it\nawait this.getRefreshToken();}this.getUserProfile();}else{// If no access token, try to refresh\nawait this.getRefreshToken();this.getUserProfile();}}}// Generate random state string for Spotify login\ngenerateRandomString(length){let text='';const possible='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';for(let i=0;i<length;i++){text+=possible.charAt(Math.floor(Math.random()*possible.length));}return text;}login(){const stateKey='spotify_auth_state';const redirect_uri='https://briiking4.github.io/cleanify/';// redirect URI\nconst state=this.generateRandomString(16);localStorage.setItem(stateKey,state);const scope='user-read-private user-read-email playlist-read-private playlist-modify-public playlist-modify-private';let url='https://accounts.spotify.com/authorize';url+='?response_type=token';url+='&client_id='+encodeURIComponent(process.env.REACT_APP_SPOTIFY_CLIENT_ID);url+='&scope='+encodeURIComponent(scope);url+='&redirect_uri='+encodeURIComponent(redirect_uri);url+='&state='+encodeURIComponent(state);window.location=url;}logout(){this.setState({loggedIn:false});window.location.href='';}render(){const userId=this.state.userId;return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},this.state.loggedIn?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row profile\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-4 col-sm-4 col-lg-1 col-md-3\"},/*#__PURE__*/React.createElement(\"img\",{src:this.state.profPic,className:\"profPic rounded-circle img-fluid\",alt:\"profile pic\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-8 col-sm-8 col-lg-11 col-md-9 text-left ml-n3\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger btn-sm mx-0 logout float-right\",onClick:this.logout},\"Log Out\"),/*#__PURE__*/React.createElement(\"h1\",{className:\"profName\"},this.state.name))),/*#__PURE__*/React.createElement(Playlists,{user:userId})):/*#__PURE__*/React.createElement(\"div\",{id:\"login\",className:\"pt-5\"},/*#__PURE__*/React.createElement(Fade,{top:true},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:logo,className:\"logo img-fluid text-center\",alt:\"logo\"}),/*#__PURE__*/React.createElement(\"h1\",{className:\"logo-title font-weight-bold\"},\"Cleanify\"))),/*#__PURE__*/React.createElement(Zoom,{delay:1000},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{id:\"login-button\",onClick:this.login,className:\"btn btn-success\"},\"Log in with Spotify\")))));}}export default App;","map":{"version":3,"names":["React","Component","profPic","logo","Zoom","Fade","Playlists","SpotifyWebApi","ReactGA","spotifyApi","App","constructor","getRefreshToken","refreshToken","localStorage","getItem","url","console","log","payload","method","headers","body","URLSearchParams","grant_type","refresh_token","client_id","process","env","REACT_APP_SPOTIFY_CLIENT_ID","fetch","response","json","access_token","setItem","setAccessToken","error","params","getHashParams","token","initialize","pageview","window","location","pathname","state","userId","loggedIn","name","login","bind","logout","hashParams","e","r","q","hash","substring","exec","decodeURIComponent","getUserProfile","getMe","then","images","length","setState","id","display_name","componentDidMount","accessToken","tokenExpiration","Date","now","generateRandomString","text","possible","i","charAt","Math","floor","random","stateKey","redirect_uri","scope","encodeURIComponent","href","render","createElement","className","src","alt","type","onClick","user","top","delay"],"sources":["/Users/brianaking/cleanify/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport profPic from './profPic.png';\nimport logo from './logo.png';\nimport Zoom from 'react-reveal/Zoom';\nimport Fade from 'react-reveal/Fade';\n\nimport './App.css';\nimport Playlists from './components/Playlists';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport ReactGA from 'react-ga';\n\n\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    console.log(process.env.REACT_APP_SPOTIFY_CLIENT_ID)\n\n    // Set token if it exists in the URL\n    if (token) {\n      spotifyApi.setAccessToken(token);\n      localStorage.setItem('access_token', token); // Store the access token\n    }\n\n    ReactGA.initialize('UA-172518785-1');\n    ReactGA.pageview(window.location.pathname);\n\n    this.state = {\n      userId: '',\n      loggedIn: token ? true : false,\n      profPic: '',\n      name: '',\n    };\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  getHashParams() {\n    let hashParams = {};\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  // Function to get user profile from Spotify\n  getUserProfile() {\n    spotifyApi.getMe().then((response) => {\n      if (response.images.length === 0) {\n        this.setState({\n          userId: response.id,\n          profPic: profPic,\n          name: response.display_name,\n        });\n      } else {\n        this.setState({\n          userId: response.id,\n          profPic: response.images[0].url,\n          name: response.display_name,\n        });\n      }\n    });\n  }\n\n // Function to get refresh token\ngetRefreshToken = async () => {\n  const refreshToken = localStorage.getItem('refresh_token');\n  const url = 'https://accounts.spotify.com/api/token';\n\n  // Log to check the stored refresh token\n  console.log('Refresh Token:', refreshToken);\n\n  // Prepare the payload\n  const payload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\n    }),\n  };\n\n  try {\n    // Send the request\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    // Log the response to debug\n    console.log('Refresh Token Response:', response);\n\n    // Check if the response contains the access token\n    if (response.access_token) {\n      localStorage.setItem('access_token', response.access_token); // Store the new access token\n      spotifyApi.setAccessToken(response.access_token); // Set the new access token for API\n    }\n\n    // Check if there is a new refresh token and store it\n    if (response.refresh_token) {\n      localStorage.setItem('refresh_token', response.refresh_token); // Store the new refresh token\n    }\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n  }\n};\n\n\n  // Handle component mounting\n  async componentDidMount() {\n    if (this.state.loggedIn) {\n      const accessToken = localStorage.getItem('access_token');\n      if (accessToken) {\n        const tokenExpiration = localStorage.getItem('token_expiration');\n        if (!tokenExpiration || Date.now() > tokenExpiration) {\n          // If token has expired, refresh it\n          await this.getRefreshToken();\n        }\n        this.getUserProfile();\n      } else {\n        // If no access token, try to refresh\n        await this.getRefreshToken();\n        this.getUserProfile();\n      }\n    }\n  }\n\n  // Generate random state string for Spotify login\n  generateRandomString(length) {\n    let text = '';\n    const possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  login() {\n    const stateKey = 'spotify_auth_state';\n    const redirect_uri = 'https://briiking4.github.io/cleanify/'; // redirect URI\n\n    const state = this.generateRandomString(16);\n\n    localStorage.setItem(stateKey, state);\n    const scope =\n      'user-read-private user-read-email playlist-read-private playlist-modify-public playlist-modify-private';\n    let url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=token';\n    url += '&client_id=' + encodeURIComponent(process.env.REACT_APP_SPOTIFY_CLIENT_ID);\n    url += '&scope=' + encodeURIComponent(scope);\n    url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n    url += '&state=' + encodeURIComponent(state);\n\n    window.location = url;\n  }\n\n  logout() {\n    this.setState({\n      loggedIn: false,\n    });\n    window.location.href = '';\n  }\n\n  render() {\n    const userId = this.state.userId;\n\n    return (\n      <div className=\"App\">\n        {this.state.loggedIn ? (\n          <div>\n            <div className=\"row profile\">\n              <div className=\"col-4 col-sm-4 col-lg-1 col-md-3\">\n                <img\n                  src={this.state.profPic}\n                  className=\"profPic rounded-circle img-fluid\"\n                  alt=\"profile pic\"\n                />\n              </div>\n              <div className=\"col-8 col-sm-8 col-lg-11 col-md-9 text-left ml-n3\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger btn-sm mx-0 logout float-right\"\n                  onClick={this.logout}\n                >\n                  Log Out\n                </button>\n                <h1 className=\"profName\">{this.state.name}</h1>\n              </div>\n            </div>\n            <Playlists user={userId}></Playlists>\n          </div>\n        ) : (\n          <div id=\"login\" className=\"pt-5\">\n            <Fade top>\n              <div>\n                <img\n                  src={logo}\n                  className=\"logo img-fluid text-center\"\n                  alt=\"logo\"\n                />\n                <h1 className=\"logo-title font-weight-bold\">Cleanify</h1>\n              </div>\n            </Fade>\n            <Zoom delay={1000}>\n              <div>\n                <button\n                  id=\"login-button\"\n                  onClick={this.login}\n                  className=\"btn btn-success\"\n                >\n                  Log in with Spotify\n                </button>\n              </div>\n            </Zoom>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}