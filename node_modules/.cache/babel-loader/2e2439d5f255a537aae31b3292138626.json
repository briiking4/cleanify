{"ast":null,"code":"var _jsxFileName = \"/Users/brianaking/Desktop/Spotify API/my-app/src/components/Playlists.js\";\nimport React from 'react';\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.playlistIsSelected = () => {\n      this.setState({\n        playlistSelected: true\n      });\n    };\n\n    this.state = {\n      playlistList: [],\n      playlistSelected: false\n    };\n  }\n\n  getPlaylistData() {\n    var playlistItems = [];\n    spotifyApi.getUserPlaylists().then((response, onRejected) => {\n      console.log(response);\n      response.items.map(item => {\n        playlistItems.push({\n          id: item.id,\n          name: item.name,\n          image: item.images[0].url,\n          url: item.external_urls.spotify\n        });\n      });\n      this.setState({\n        playlistList: playlistItems\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPlaylistData();\n  }\n\n  render() {\n    const selected = this.playlistIsSelected;\n    const showPlaylist = this.state.playlistList.map(function (playlist) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: playlist.id,\n        className: \"col-md-4 col-lg-3 col-6 card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: playlist.image,\n        className: \"card-img-top\",\n        onClick: selected,\n        alt: \"Card image cap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }\n      }, playlist.name)));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"Playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, this.state.playlistSelected ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \" HI \") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, showPlaylist));\n  }\n\n}\n\nexport default Playlists;","map":{"version":3,"sources":["/Users/brianaking/Desktop/Spotify API/my-app/src/components/Playlists.js"],"names":["React","SpotifyWebApi","spotifyApi","Playlists","Component","constructor","props","playlistIsSelected","setState","playlistSelected","state","playlistList","getPlaylistData","playlistItems","getUserPlaylists","then","response","onRejected","console","log","items","map","item","push","id","name","image","images","url","external_urls","spotify","componentDidMount","render","selected","showPlaylist","playlist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;AAEA,MAAME,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SA4BjBC,kBA5BiB,GA4BI,MAAM;AACzB,WAAKC,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAGD,KAhCgB;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXF,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAID;;AAEDG,EAAAA,eAAe,GAAE;AACf,QAAIC,aAAa,GAAE,EAAnB;AAEEX,IAAAA,UAAU,CAACY,gBAAX,GACIC,IADJ,CACS,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEEA,MAAAA,QAAQ,CAACI,KAAT,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AAC3BT,QAAAA,aAAa,CAACU,IAAd,CAAmB;AAACC,UAAAA,EAAE,EAAEF,IAAI,CAACE,EAAV;AAAcC,UAAAA,IAAI,EAACH,IAAI,CAACG,IAAxB;AAA8BC,UAAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeC,GAApD;AAAyDA,UAAAA,GAAG,EAAEN,IAAI,CAACO,aAAL,CAAmBC;AAAjF,SAAnB;AACD,OAFD;AAGD,WAAKtB,QAAL,CAAc;AACZG,QAAAA,YAAY,EAAEE;AADF,OAAd;AAGF,KAVJ;AAWF;;AAEDkB,EAAAA,iBAAiB,GAAE;AACjB,SAAKnB,eAAL;AACD;;AASFoB,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAG,KAAK1B,kBAAtB;AAEA,UAAM2B,YAAY,GAChB,KAAKxB,KAAL,CAAWC,YAAX,CAAwBU,GAAxB,CAA4B,UAASc,QAAT,EAAkB;AAC5C,0BACE;AAAK,QAAA,GAAG,EAAEA,QAAQ,CAACX,EAAnB;AAAuB,QAAA,SAAS,EAAC,8BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAEW,QAAQ,CAACT,KAAnB;AAA0B,QAAA,SAAS,EAAC,cAApC;AAAmD,QAAA,OAAO,EAAGO,QAA7D;AAAuE,QAAA,GAAG,EAAC,gBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BE,QAAQ,CAACV,IAAnC,CADF,CAFH,CADF;AAQD,KATD,CADF;AAYA,wBACE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKf,KAAL,CAAWD,gBAAX,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCyB,YADD,CAJJ,CADF;AAgBD;;AApEoC;;AAwEvC,eAAe/B,SAAf","sourcesContent":["import React from 'react';\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      playlistList: [],\n      playlistSelected: false\n    };\n  }\n\n  getPlaylistData(){\n    var playlistItems= [];\n\n      spotifyApi.getUserPlaylists()\n         .then((response, onRejected) => {\n           console.log(response)\n\n             response.items.map((item) => {\n               playlistItems.push({id: item.id, name:item.name, image: item.images[0].url, url: item.external_urls.spotify})\n             })\n            this.setState({\n              playlistList: playlistItems\n            })\n         });\n   }\n\n   componentDidMount(){\n     this.getPlaylistData()\n   }\n\n   playlistIsSelected = () => {\n     this.setState({\n       playlistSelected: true\n     });\n   }\n\n\n  render(){\n    const selected = this.playlistIsSelected\n\n    const showPlaylist =\n      this.state.playlistList.map(function(playlist){\n        return (\n          <div key={playlist.id} className=\"col-md-4 col-lg-3 col-6 card\">\n              <img src={playlist.image} className=\"card-img-top\" onClick= {selected} alt=\"Card image cap\"/>\n             <div className=\"card-body\">\n               <p className=\"card-text\">{playlist.name}</p>\n             </div>\n          </div>\n           )\n      });\n\n    return (\n      <div class=\"Playlist\">\n      {\n        this.state.playlistSelected ?\n        <h1> HI </h1>\n        : <div className=\"row\">\n          {showPlaylist}\n          </div>\n      }\n      </div>\n\n\n\n\n    );\n\n  }\n}\n\n\nexport default Playlists\n"]},"metadata":{},"sourceType":"module"}