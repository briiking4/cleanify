{"ast":null,"code":"import React from'react';import'./CleanPlaylist.css';import SpotifyWebApi from'spotify-web-api-js';const spotifyApi=new SpotifyWebApi();class CleanPlaylist extends React.Component{constructor(props){super(props);this.state={userId:this.props.user,playlistName:this.props.name,playlistId:this.props.data,ownerId:'',buttonPressed:false,loadingData:false,newPlaylistId:'',revealUnable:false};this.explicitTracks=[];this.cleanTracks=[];this.noCleanVersions=[];this.recTracks=[];this.timesClicked=1;this.unaddCounter=1;this.openPlaylist=\"\";this.makeCleanPlaylist=this.makeCleanPlaylist.bind(this);this.findCleanTrack=this.findCleanTrack.bind(this);this.getRecommended=this.getRecommended.bind(this);this.unableToAdd=this.unableToAdd.bind(this);this.addTrack=this.addTrack.bind(this);}getTracksData(owner,id){var explicitTracksList=[];var cleanTracksList=[];spotifyApi.getPlaylistTracks(owner,id).then(response=>{response.items.map(item=>{if(item.track.explicit===true){explicitTracksList.push(item.track);}else{cleanTracksList.push(item.track);}});});this.explicitTracks=explicitTracksList;this.cleanTracks=cleanTracksList;}componentDidMount(){var playlistId=this.props.data;var ownerId=this.props.id;this.getTracksData(ownerId,playlistId);window.scrollTo(0,0);}async findCleanTrack(track){var name=track.name;var artist=track.artists[0].name;var cleanTrack;var itemC;var counter=0;let searchResult=await spotifyApi.search('track: '+name+' artist: '+'\"'+artist+'\"',['track']);for(itemC of searchResult.tracks.items){if(itemC.explicit===false){if((itemC.name===name||itemC.name.includes(\"Clean\"))&&itemC.artists[0].name===artist&&counter<=0){cleanTrack=itemC;counter++;}}}if(counter===0){cleanTrack=null;}return cleanTrack;}async makeCleanPlaylist(){this.setState({loadingData:true});var itemE;for(itemE of this.explicitTracks){let cleanTrack=await this.findCleanTrack(itemE);if(cleanTrack===null){this.noCleanVersions.push(itemE);}else{this.cleanTracks.push(cleanTrack);}}if(this.noCleanVersions.length>0){this.recTracks=await this.getRecommended(this.noCleanVersions);}var trackUri=[];var newId='';var x;for(x of this.cleanTracks){trackUri.push(x.uri);}let playlistResult=await spotifyApi.createPlaylist(this.state.userId,{name:this.state.playlistName+\"(Clean)\"});this.openPlaylist=playlistResult.external_urls.spotify;newId=playlistResult.id;let addResult=await spotifyApi.addTracksToPlaylist(this.state.userId,newId,trackUri);this.setState({newPlaylistId:newId,buttonPressed:true});}async getRecommended(tracks){var trackId=[];var tracksList=tracks.slice();var recTracks=[];if(tracks.length>5){tracksList.splice(5,tracks.length);}tracksList.map(item=>{trackId.push(item.id);});let recommededResult=await spotifyApi.getRecommendations({limit:20,seed_tracks:trackId});var itemR;for(itemR of recommededResult.tracks){if(itemR.explicit===true){let cleanTrack=await this.findCleanTrack(itemR);if(cleanTrack!==null){recTracks.push(cleanTrack);}}else{recTracks.push(itemR);}}if(recTracks.length>10){recTracks=recTracks.slice(0,7);}return recTracks;}unableToAdd(){this.timesClicked++;if(this.timesClicked%2===0){this.setState({revealUnable:true});}else{this.setState({revealUnable:false});}}async addTrack(track){// this.unaddCounter ++\nvar elem=document.getElementById(track.id);var counter=parseInt(elem.getAttribute(\"clicks\"));var uri=track.uri;counter++;if(counter%2===0){let addResult=await spotifyApi.addTracksToPlaylist(this.state.userId,this.state.newPlaylistId,[uri]);elem.style.backgroundColor=\"green\";elem.innerHTML=\"DONE\";}else{let addResult=await spotifyApi.removeTracksFromPlaylist(this.state.userId,this.state.newPlaylistId,[uri]);elem.style.backgroundColor=\"#565656\";elem.innerHTML=\"ADD\";}elem.setAttribute(\"clicks\",counter);}render(){const unavalible=this.noCleanVersions.map(function(item,index){index++;return/*#__PURE__*/React.createElement(\"p\",{key:item.id},\" \",index,\". \",item.name);});const recommendedTracks=this.recTracks.map(function(item){return/*#__PURE__*/React.createElement(\"div\",{key:item.id},/*#__PURE__*/React.createElement(\"div\",{className:\"row my-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-3 col-lg-1 mt-3\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-add\",id:item.id,clicks:\"1\",onClick:()=>this.addTrack(item)},\"ADD\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-9 col-lg-11\"},/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/track/\"+item.id,width:\"90%\",height:\"80\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-track\"}))));},this);return/*#__PURE__*/React.createElement(\"div\",{className:\"Clean col-12\"},this.state.buttonPressed?/*#__PURE__*/React.createElement(\"div\",{className:\"mx-auto\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"font-weight-bold text-success\"},\" Your Playlist Is Cleanified! \"),/*#__PURE__*/React.createElement(\"p\",null,\" You're done! We have already saved it to your library!\"),/*#__PURE__*/React.createElement(\"a\",{href:this.openPlaylist,target:\"_blank\",rel:\"noopener noreferrer\",className:\"btn btn-success\"},\" Open In Spotify \"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{id:\"fadeshow\",className:\"col\"},/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/playlist/\"+this.state.playlistId,width:\"100%\",height:\"100%\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-playlist\"})),/*#__PURE__*/React.createElement(\"i\",{id:\"fadeshow\",className:\"fas fa-arrow-right text-success fa-2x\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/playlist/\"+this.state.newPlaylistId,width:\"100%\",height:\"100%\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-playlist\"})))),/*#__PURE__*/React.createElement(\"hr\",{className:\"divider mb-3\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:this.unableToAdd},\" Reveal Songs Unable to be Cleaned: \",this.noCleanVersions.length),this.state.revealUnable&&this.noCleanVersions.length>0?unavalible:this.state.revealUnable&&/*#__PURE__*/React.createElement(\"p\",null,\"Good News! We were able to find clean versions of each song!\"),this.noCleanVersions.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"hr\",{className:\"divider\"}),/*#__PURE__*/React.createElement(\"h2\",null,\"Recommended Clean Songs\"),/*#__PURE__*/React.createElement(\"p\",null,\"Based on the songs we were unable to add: \"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},recommendedTracks)))):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-lg btn-success mt-3\",onClick:this.makeCleanPlaylist,disabled:this.state.loadingData},this.state.loadingData&&/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-compact-disc fa-spin text-white\"}),\"Clean Playlist\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"iframe\",{src:\"https://open.spotify.com/embed/playlist/\"+this.state.playlistId,width:\"60%\",height:\"400\",frameBorder:\"0\",allowtransparency:\"true\",allow:\"encrypted-media\",title:\"embeded-playlist\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"text-muted\"},\" Note: Spotify's explicit content tags are applied based on information Spotify receives from rights-holders. They can\\u2019t guarantee all explicit content is marked as such. Cleanify will clean your playlist based off of Spotify's marked explicit/clean songs.\")));}}export default CleanPlaylist;","map":{"version":3,"names":["React","SpotifyWebApi","spotifyApi","CleanPlaylist","Component","constructor","props","state","userId","user","playlistName","name","playlistId","data","ownerId","buttonPressed","loadingData","newPlaylistId","revealUnable","explicitTracks","cleanTracks","noCleanVersions","recTracks","timesClicked","unaddCounter","openPlaylist","makeCleanPlaylist","bind","findCleanTrack","getRecommended","unableToAdd","addTrack","getTracksData","owner","id","explicitTracksList","cleanTracksList","getPlaylistTracks","then","response","items","map","item","track","explicit","push","componentDidMount","window","scrollTo","artist","artists","cleanTrack","itemC","counter","searchResult","search","tracks","includes","setState","itemE","length","trackUri","newId","x","uri","playlistResult","createPlaylist","external_urls","spotify","addResult","addTracksToPlaylist","trackId","tracksList","slice","splice","recommededResult","getRecommendations","limit","seed_tracks","itemR","elem","document","getElementById","parseInt","getAttribute","style","backgroundColor","innerHTML","removeTracksFromPlaylist","setAttribute","render","unavalible","index","createElement","key","recommendedTracks","className","type","clicks","onClick","src","width","height","frameBorder","allowtransparency","allow","title","href","target","rel","disabled"],"sources":["/Users/brianaking/Desktop/cleanify/src/components/CleanPlaylist.js"],"sourcesContent":["import React from 'react';\nimport './CleanPlaylist.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass CleanPlaylist extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      userId: this.props.user,\n      playlistName: this.props.name,\n      playlistId: this.props.data,\n      ownerId: '',\n      buttonPressed: false,\n      loadingData: false,\n      newPlaylistId: '',\n      revealUnable: false,\n    };\n\n    this.explicitTracks = [];\n    this.cleanTracks = [];\n    this.noCleanVersions = [];\n    this.recTracks = [];\n    this.timesClicked = 1;\n    this.unaddCounter = 1;\n    this.openPlaylist = \"\";\n    this.makeCleanPlaylist = this.makeCleanPlaylist.bind(this)\n    this.findCleanTrack = this.findCleanTrack.bind(this)\n    this.getRecommended = this.getRecommended.bind(this)\n    this.unableToAdd = this.unableToAdd.bind(this)\n    this.addTrack = this.addTrack.bind(this)\n\n\n\n\n  }\n\n\n  getTracksData(owner, id){\n    var explicitTracksList = []\n    var cleanTracksList = []\n    spotifyApi.getPlaylistTracks(owner, id)\n      .then((response) => {\n        response.items.map((item) =>{\n          if(item.track.explicit === true){\n            explicitTracksList.push(item.track)\n          }else{\n            cleanTracksList.push(item.track)\n          }\n        })\n      })\n      this.explicitTracks = explicitTracksList\n      this.cleanTracks = cleanTracksList\n\n\n    }\n\n    componentDidMount(){\n      var playlistId = this.props.data\n      var ownerId = this.props.id\n      this.getTracksData(ownerId, playlistId)\n      window.scrollTo(0, 0)\n    }\n\n    async findCleanTrack(track){\n      var name = track.name\n      var artist = track.artists[0].name\n      var cleanTrack;\n      var itemC;\n      var counter = 0;\n        let searchResult = await spotifyApi.search('track: ' +name+ ' artist: '+ '\"'+ artist + '\"' ,['track'])\n        for (itemC of searchResult.tracks.items){\n          if (itemC.explicit === false){\n            if((itemC.name === name || itemC.name.includes(\"Clean\")) && (itemC.artists[0].name === artist && counter <= 0) ){\n              cleanTrack = itemC\n              counter ++\n            }\n          }\n        }\n        if (counter === 0 ){\n          cleanTrack = null\n        }\n\n        return cleanTrack\n    }\n\n    async makeCleanPlaylist(){\n\n      this.setState({\n        loadingData: true\n      })\n\n      var itemE;\n      for (itemE of this.explicitTracks) {\n        let cleanTrack = await this.findCleanTrack(itemE)\n        if (cleanTrack === null){\n          this.noCleanVersions.push(itemE)\n        }else{\n          this.cleanTracks.push(cleanTrack)\n        }\n      }\n\n      if (this.noCleanVersions.length > 0){\n        this.recTracks = await this.getRecommended(this.noCleanVersions)\n\n      }\n\n       var trackUri = [];\n       var newId = '';\n       var x;\n       for (x of this.cleanTracks){\n         trackUri.push(x.uri)\n       }\n        let playlistResult = await spotifyApi.createPlaylist(this.state.userId, {name: this.state.playlistName + \"(Clean)\"})\n        this.openPlaylist = playlistResult.external_urls.spotify\n        newId = playlistResult.id\n\n        let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, newId, trackUri)\n\n        this.setState({\n          newPlaylistId: newId,\n          buttonPressed: true\n        })\n\n    }\n\n    async getRecommended(tracks){\n      var trackId = [];\n      var tracksList = tracks.slice();\n      var recTracks =[];\n\n      if (tracks.length > 5){\n        tracksList.splice(5,tracks.length)\n      }\n\n      tracksList.map((item) => {\n        trackId.push(item.id)\n      })\n\n      let recommededResult = await spotifyApi.getRecommendations({limit: 20, seed_tracks: trackId})\n      var itemR;\n\n        for (itemR of recommededResult.tracks) {\n          if (itemR.explicit === true){\n            let cleanTrack = await this.findCleanTrack(itemR)\n            if (cleanTrack !== null){\n              recTracks.push(cleanTrack)\n            }\n\n          }else{\n            recTracks.push(itemR)\n          }\n        }\n\n        if (recTracks.length > 10){\n          recTracks = recTracks.slice(0,7)\n        }\n\n      return recTracks\n    }\n\n   unableToAdd(){\n     this.timesClicked ++\n     if (this.timesClicked % 2 === 0){\n       this.setState({\n         revealUnable: true\n       })\n     }else{\n       this.setState({\n         revealUnable: false\n       })\n     }\n    }\n\n     async addTrack(track){\n       // this.unaddCounter ++\n       var elem = document.getElementById(track.id);\n       var counter = parseInt(elem.getAttribute(\"clicks\"))\n       var uri = track.uri\n       counter ++\n       if (counter % 2 === 0){\n         let addResult = await spotifyApi.addTracksToPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"green\";\n         elem.innerHTML = \"DONE\";\n       }else{\n         let addResult = await spotifyApi.removeTracksFromPlaylist(this.state.userId, this.state.newPlaylistId, [uri])\n         elem.style.backgroundColor = \"#565656\";\n         elem.innerHTML = \"ADD\";\n\n       }\n       elem.setAttribute(\"clicks\", counter);\n    }\n\n\n  render(){\n\n    const unavalible =\n    this.noCleanVersions.map(function(item, index) {\n      index++\n      return (\n        <p key={item.id}> {index}. {item.name}</p>\n      )\n    });\n\n\n    const recommendedTracks =\n    this.recTracks.map(function(item) {\n      return (\n        <div key= {item.id}>\n        <div className=\"row my-2\">\n          <div className=\"col-3 col-lg-1 mt-3\">\n            <button type=\"button\" className=\"btn btn-add\" id={item.id} clicks = \"1\" onClick={() => this.addTrack(item)}>ADD</button>\n          </div>\n          <div className=\"col-9 col-lg-11\">\n            <iframe src= {\"https://open.spotify.com/embed/track/\" + item.id } width=\"90%\" height=\"80\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-track\"></iframe>\n          </div>\n        </div>\n        </div>\n      )\n    }, this);\n\n\n\n\n\n\n\n    return(\n      <div className= \"Clean col-12\">\n\n      {\n        this.state.buttonPressed ?\n        <div className= \"mx-auto\">\n          <h3 className=\"font-weight-bold text-success\"> Your Playlist Is Cleanified! </h3>\n          <p> You're done! We have already saved it to your library!</p>\n            <a href= {this.openPlaylist} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-success\"> Open In Spotify </a>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div id=\"fadeshow\" className=\"col\">\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.playlistId} width=\"100%\" height=\"100%\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n            <i id=\"fadeshow\" className=\"fas fa-arrow-right text-success fa-2x\"></i>\n            <div className=\"col\">\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.newPlaylistId} width=\"100%\" height=\"100%\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n          </div>\n        </div>\n          <hr className=\"divider mb-3\"/>\n\n          <div>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={this.unableToAdd}> Reveal Songs Unable to be Cleaned: {this.noCleanVersions.length}</button>\n            {\n              this.state.revealUnable && this.noCleanVersions.length > 0 ?\n                unavalible\n              :\n              this.state.revealUnable &&\n               <p>Good News! We were able to find clean versions of each song!</p>\n            }\n            {\n              this.noCleanVersions.length > 0 &&\n              <div>\n              <hr className=\"divider\"/>\n              <h2>Recommended Clean Songs</h2>\n              <p>Based on the songs we were unable to add: </p>\n              <div className=\"container\">\n\n                {recommendedTracks}\n              </div>\n              </div>\n            }\n\n\n          </div>\n\n        </div>\n        :\n          <div>\n            <button type=\"button\" className=\"btn btn-lg btn-success mt-3\" onClick= {this.makeCleanPlaylist} disabled={this.state.loadingData}>\n            { this.state.loadingData &&\n              <i className=\"fa fa-compact-disc fa-spin text-white\"></i>\n            }\n            Clean Playlist\n            </button>\n\n            <div>\n              <iframe src= {\"https://open.spotify.com/embed/playlist/\" + this.state.playlistId} width=\"60%\" height=\"400\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" title=\"embeded-playlist\"></iframe>\n            </div>\n            <p className=\"text-muted\"> Note: Spotify's explicit content tags are applied based on information Spotify receives from rights-holders. They can’t guarantee all explicit content is marked as such. Cleanify will clean your playlist based off of Spotify's marked explicit/clean songs.</p>\n\n          </div>\n      }\n\n      </div>\n    )\n  }\n}\n\nexport default CleanPlaylist\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}