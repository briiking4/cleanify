{"ast":null,"code":"import _classCallCheck from\"/Users/brianaking/Desktop/GitHub/cleanify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/brianaking/Desktop/GitHub/cleanify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/brianaking/Desktop/GitHub/cleanify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/brianaking/Desktop/GitHub/cleanify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import CleanPlaylist from'./CleanPlaylist';import'./Playlists.css';import SpotifyWebApi from'spotify-web-api-js';var spotifyApi=new SpotifyWebApi();var Playlists=/*#__PURE__*/function(_React$Component){_inherits(Playlists,_React$Component);var _super=_createSuper(Playlists);function Playlists(props){var _this;_classCallCheck(this,Playlists);_this=_super.call(this,props);_this.playlistIsSelected=function(event){var currentPlaylistId=event.target.getAttribute(\"id\");var playlistOwnerId=event.target.getAttribute(\"owner\");var playlistName=event.target.getAttribute(\"name\");_this.setState({playlistSelected:true,currentSelected:currentPlaylistId,ownerId:playlistOwnerId,playlistName:playlistName});};_this.state={ownerId:'',playlistList:[],playlistSelected:false,currentSelected:'',playlistName:'',noPlaylists:false};return _this;}_createClass(Playlists,[{key:\"getPlaylistData\",value:function getPlaylistData(){var _this2=this;var playlistItems=[];spotifyApi.getUserPlaylists({limit:50}).then(function(response,onRejected){if(response.items.length===0){_this2.setState({noPlaylists:true});}response.items.map(function(item){if(item.images.length===0){item.images.push({url:\"https://i.ya-webdesign.com/images/notes-grey-icons-png-2.png\"});}playlistItems.push({ownerId:item.owner.id,id:item.id,name:item.name,image:item.images[0].url});return playlistItems;});_this2.setState({playlistList:playlistItems});});}},{key:\"componentDidMount\",value:function componentDidMount(){this.getPlaylistData();}},{key:\"backButton\",value:function backButton(){this.setState({playlistSelected:false});}},{key:\"render\",value:function render(){var userId=this.props.user;var playlistId=this.state.currentSelected;var ownerId=this.state.ownerId;var selected=this.playlistIsSelected;var showPlaylist=this.state.playlistList.map(function(playlist){return/*#__PURE__*/React.createElement(\"div\",{key:playlist.id,className:\"col-sm-6 col-md-4 col-lg-3 col-12 card\"},/*#__PURE__*/React.createElement(\"img\",{src:playlist.image,id:playlist.id,name:playlist.name,owner:playlist.ownerId,onClick:selected,className:\"card-img card-img-top\",alt:\"card\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"p\",{className:\"card-text font-weight-bold\"},playlist.name)));});return/*#__PURE__*/React.createElement(\"div\",{className:\"Playlist\"},this.state.playlistSelected?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-success float-left mt-n1\",onClick:this.backButton.bind(this)},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-arrow-circle-left\",\"aria-hidden\":\"true\"}),\" Clean Another\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(CleanPlaylist,{name:this.state.playlistName,id:ownerId,data:playlistId,user:userId}))):/*#__PURE__*/React.createElement(\"div\",{className:\"user-playlists overflow-hidden\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"font-weight-bold header\"},\"Playlists\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"h5 text-weight-bold text-success sub-header \"},\" Select a Playlist to Clean\"),/*#__PURE__*/React.createElement(\"p\",{className:\" text-muted sub-sub-header\"},\" Don't worry! We will not alter your original playlist.\"),/*#__PURE__*/React.createElement(\"p\",{className:\" text-muted sub-sub-header\"},\" Can't find it? Make sure you either own or follow the playlist. If so, open Spotify and move it to the top of your list!\"),/*#__PURE__*/React.createElement(\"hr\",{className:\"divider mb-5\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},this.state.noPlaylists?/*#__PURE__*/React.createElement(\"div\",{class:\"text-center col-12\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Oh no! You do not have any existing playlists to clean.\"),/*#__PURE__*/React.createElement(\"h4\",null,\" Open Spotify to create a new playlist and revisit Cleanify.\"),/*#__PURE__*/React.createElement(\"a\",{href:\"https://open.spotify.com\",target:\"_blank\",rel:\"noopener noreferrer\",class:\"btn btn-success\"},\"Open Spotify\")):showPlaylist)));}}]);return Playlists;}(React.Component);export default Playlists;","map":{"version":3,"sources":["/Users/brianaking/Desktop/GitHub/cleanify/src/components/Playlists.js"],"names":["React","CleanPlaylist","SpotifyWebApi","spotifyApi","Playlists","props","playlistIsSelected","event","currentPlaylistId","target","getAttribute","playlistOwnerId","playlistName","setState","playlistSelected","currentSelected","ownerId","state","playlistList","noPlaylists","playlistItems","getUserPlaylists","limit","then","response","onRejected","items","length","map","item","images","push","url","owner","id","name","image","getPlaylistData","userId","user","playlistId","selected","showPlaylist","playlist","backButton","bind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CleanPlaylist from './CleanPlaylist'\nimport './Playlists.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass Playlists extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      ownerId: '',\n      playlistList: [],\n      playlistSelected: false,\n      currentSelected: '',\n      playlistName: '',\n      noPlaylists: false\n    };\n  }\n\n  getPlaylistData(){\n    var playlistItems= [];\n\n      spotifyApi.getUserPlaylists({limit:50})\n         .then((response, onRejected) => {\n           if (response.items.length === 0){\n             this.setState({\n               noPlaylists: true\n             })\n           }\n           response.items.map((item) => {\n             if (item.images.length === 0){\n               item.images.push({url: \"https://i.ya-webdesign.com/images/notes-grey-icons-png-2.png\"})\n             }\n             playlistItems.push({ownerId: item.owner.id, id: item.id, name:item.name, image: item.images[0].url})\n             return playlistItems\n           })\n          this.setState({\n            playlistList: playlistItems\n          })\n       });\n\n   }\n\n   componentDidMount(){\n     this.getPlaylistData()\n   }\n\n   playlistIsSelected = (event) => {\n\n     var currentPlaylistId = event.target.getAttribute(\"id\")\n     var playlistOwnerId = event.target.getAttribute(\"owner\")\n     var playlistName = event.target.getAttribute(\"name\")\n     this.setState({\n       playlistSelected: true,\n       currentSelected: currentPlaylistId,\n       ownerId: playlistOwnerId,\n       playlistName: playlistName\n     });\n   }\n\n   backButton(){\n     this.setState({\n       playlistSelected:false\n     })\n   }\n\n  render(){\n    const userId = this.props.user\n    const playlistId = this.state.currentSelected\n    const ownerId = this.state.ownerId\n\n    const selected = this.playlistIsSelected\n\n    const showPlaylist =\n      this.state.playlistList.map(function(playlist){\n        return (\n          <div key={playlist.id} className=\"col-sm-6 col-md-4 col-lg-3 col-12 card\">\n             <img src={playlist.image} id= {playlist.id} name= {playlist.name} owner = {playlist.ownerId} onClick={selected} className=\"card-img card-img-top\" alt=\"card\"/>\n             <div className=\"card-body\">\n               <p className=\"card-text font-weight-bold\">{playlist.name}</p>\n             </div>\n          </div>\n           )\n      });\n\n\n\n    return (\n      <div className=\"Playlist\">\n\n      {\n        this.state.playlistSelected ?\n        <div>\n          <div className=\"row\">\n          <div className=\"col\">\n            <button type=\"button\" className=\"btn btn-success float-left mt-n1\" onClick={this.backButton.bind(this)}><i className =\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></i> Clean Another</button>\n          </div>\n          </div>\n          <div className=\"row\">\n            <CleanPlaylist name= {this.state.playlistName} id= {ownerId} data= {playlistId} user= {userId}></CleanPlaylist>\n          </div>\n        </div>\n        : <div className=\"user-playlists overflow-hidden\">\n            <h3 className=\"font-weight-bold header\">Playlists</h3>\n            <h3 className=\"h5 text-weight-bold text-success sub-header \"> Select a Playlist to Clean</h3>\n            <p className=\" text-muted sub-sub-header\"> Don't worry! We will not alter your original playlist.</p>\n            <p className=\" text-muted sub-sub-header\"> Can't find it? Make sure you either own or follow the playlist. If so, open Spotify and move it to the top of your list!</p>\n            <hr className=\"divider mb-5\"/>\n              <div className=\"row\">\n              {this.state.noPlaylists ?\n                <div class=\"text-center col-12\">\n                  <h3>Oh no! You do not have any existing playlists to clean.</h3>\n                  <h4> Open Spotify to create a new playlist and revisit Cleanify.</h4>\n                  <a href=\"https://open.spotify.com\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn btn-success\">Open Spotify</a>\n                </div>\n                :\n                showPlaylist\n              }\n              </div>\n          </div>\n      }\n      </div>\n\n    );\n  }\n}\n\n\nexport default Playlists\n"]},"metadata":{},"sourceType":"module"}